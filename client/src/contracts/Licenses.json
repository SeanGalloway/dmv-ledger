{
  "contractName": "Licenses",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "correctiveLensesRestriction",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "realId",
          "type": "bool"
        }
      ],
      "name": "newLicense",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "correctiveLensesRestriction",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "realId",
          "type": "bool"
        }
      ],
      "name": "renewLicense",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "newStreetAddress",
          "type": "bytes"
        }
      ],
      "name": "updateAddress",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getLicense",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "correctiveLensesRestriction",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "realId",
              "type": "bool"
            }
          ],
          "internalType": "struct Licenses.License",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "recordType",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "forCitizen",
          "type": "address"
        }
      ],
      "name": "getVitalRecord",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum Licenses.CertificateType",
              "name": "certificateType",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "isValue",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "date",
              "type": "uint128"
            }
          ],
          "internalType": "struct Licenses.VitalRecord",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "firstName",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "lastName",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "streetAddress",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "forCitizen",
          "type": "address"
        }
      ],
      "name": "addProfile",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "recordType",
          "type": "uint8"
        },
        {
          "internalType": "uint128",
          "name": "date",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "forCitizen",
          "type": "address"
        }
      ],
      "name": "saveVitalRecord",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"firstName\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"lastName\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"streetAddress\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"forCitizen\",\"type\":\"address\"}],\"name\":\"addProfile\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLicense\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"correctiveLensesRestriction\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"realId\",\"type\":\"bool\"}],\"internalType\":\"struct Licenses.License\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"recordType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"forCitizen\",\"type\":\"address\"}],\"name\":\"getVitalRecord\",\"outputs\":[{\"components\":[{\"internalType\":\"enum Licenses.CertificateType\",\"name\":\"certificateType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isValue\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"date\",\"type\":\"uint128\"}],\"internalType\":\"struct Licenses.VitalRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"correctiveLensesRestriction\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"realId\",\"type\":\"bool\"}],\"name\":\"newLicense\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"correctiveLensesRestriction\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"realId\",\"type\":\"bool\"}],\"name\":\"renewLicense\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"recordType\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"date\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"forCitizen\",\"type\":\"address\"}],\"name\":\"saveVitalRecord\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"newStreetAddress\",\"type\":\"bytes\"}],\"name\":\"updateAddress\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Licenses.sol\":\"Licenses\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Licenses.sol\":{\"keccak256\":\"0x18eb96e240595ea4d1083e9a6ac2b0c69b5a1ae3505b20eb2f485038a5acacfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f77c738e3c044696b2af3ebf32f48675a6ac0b5a114ac6e4d0d23c94c6a80849\",\"dweb:/ipfs/QmNfzTvnD4QrDogDCegDin6KsipMW955W6X1BzvQK238LS\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611515806100206000396000f3fe6080604052600436106100705760003560e01c806341e517d61161004e57806341e517d6146100c957806350cb34b8146100e557806352af9c4b14610101578063c5e4dd821461013e57610070565b806324373d95146100755780632f54ced51461009157806340129a40146100ad575b600080fd5b61008f600480360381019061008a91906111c2565b610169565b005b6100ab60048036038101906100a6919061109a565b610552565b005b6100c760048036038101906100c2919061105e565b6105ab565b005b6100e360048036038101906100de919061105e565b610718565b005b6100ff60048036038101906100fa91906110db565b6108e3565b005b34801561010d57600080fd5b5061012860048036038101906101239190611186565b610bab565b604051610135919061134c565b60405180910390f35b34801561014a57600080fd5b50610153610dca565b6040516101609190611331565b60405180910390f35b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166101c157600080fd5b600060018111156101ce57fe5b8360ff1660018111156101dd57fe5b60018111156101e857fe5b1415610389576000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160000160019054906101000a900460ff161561024a57600080fd5b610252610e63565b600181602001901515908115158152505060008160000190600181111561027557fe5b9081600181111561028257fe5b815250508281604001906fffffffffffffffffffffffffffffffff1690816fffffffffffffffffffffffffffffffff1681525050806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160008201518160000160006101000a81548160ff0219169083600181111561031c57fe5b021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055509050505061054d565b60018081111561039557fe5b8360ff1660018111156103a457fe5b60018111156103af57fe5b141561054c576000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060070160000160019054906101000a900460ff161561041157600080fd5b610419610e63565b600181602001901515908115158152505060018160000190600181111561043c57fe5b9081600181111561044957fe5b815250508281604001906fffffffffffffffffffffffffffffffff1690816fffffffffffffffffffffffffffffffff1681525050806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060070160008201518160000160006101000a81548160ff021916908360018111156104e357fe5b021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550905050505b5b505050565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030190805190602001906105a7929190610ea3565b5050565b66354a6ba7a1800034146105be57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661064c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064390611311565b60405180910390fd5b610654610f23565b6312cc030042018160000181815250508281602001901515908115158152505081816040019015159081151581525050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548160ff021916908315150217905550905050505050565b80156107365766470de4df820000341461073157600080fd5b61074a565b66354a6ba7a18000341461074957600080fd5b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166107d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cf90611311565b60405180910390fd5b6312cc030042016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160000181905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160010160016101000a81548160ff021916908315150217905550816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160010160006101000a81548160ff0219169083151502179055505050565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161561093c57600080fd5b610944610f48565b6001816000019015159081151581525050848160200181905250838160400181905250828160600181905250806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160010190805190602001906109eb929190610ea3565b506040820151816002019080519060200190610a08929190610ea3565b506060820151816003019080519060200190610a25929190610ea3565b506080820151816004016000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548160ff021916908315150217905550505060a08201518160060160008201518160000160006101000a81548160ff02191690836001811115610aa857fe5b021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505060c08201518160070160008201518160000160006101000a81548160ff02191690836001811115610b3b57fe5b021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050509050505050505050565b610bb3610e63565b600180811115610bbf57fe5b60ff168360ff161115610bd157600080fd5b60006001811115610bde57fe5b8360ff166001811115610bed57fe5b6001811115610bf857fe5b1415610ce3576000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006016040518060600160405290816000820160009054906101000a900460ff166001811115610c6857fe5b6001811115610c7357fe5b81526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815250509050610dc4565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206007016040518060600160405290816000820160009054906101000a900460ff166001811115610d4d57fe5b6001811115610d5857fe5b81526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152505090505b92915050565b610dd2610f23565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401604051806060016040529081600082015481526020016001820160009054906101000a900460ff161515151581526020016001820160019054906101000a900460ff161515151581525050905090565b604051806060016040528060006001811115610e7b57fe5b815260200160001515815260200160006fffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610ee457805160ff1916838001178555610f12565b82800160010185558215610f12579182015b82811115610f11578251825591602001919060010190610ef6565b5b509050610f1f9190610f99565b5090565b6040518060600160405280600081526020016000151581526020016000151581525090565b6040518060e00160405280600015158152602001606081526020016060815260200160608152602001610f79610f23565b8152602001610f86610e63565b8152602001610f93610e63565b81525090565b5b80821115610fb2576000816000905550600101610f9a565b5090565b600081359050610fc581611483565b92915050565b600081359050610fda8161149a565b92915050565b600082601f830112610ff157600080fd5b8135611004610fff82611394565b611367565b9150808252602083016020830185838301111561102057600080fd5b61102b838284611467565b50505092915050565b600081359050611043816114b1565b92915050565b600081359050611058816114c8565b92915050565b6000806040838503121561107157600080fd5b600061107f85828601610fcb565b925050602061109085828601610fcb565b9150509250929050565b6000602082840312156110ac57600080fd5b600082013567ffffffffffffffff8111156110c657600080fd5b6110d284828501610fe0565b91505092915050565b600080600080608085870312156110f157600080fd5b600085013567ffffffffffffffff81111561110b57600080fd5b61111787828801610fe0565b945050602085013567ffffffffffffffff81111561113457600080fd5b61114087828801610fe0565b935050604085013567ffffffffffffffff81111561115d57600080fd5b61116987828801610fe0565b925050606061117a87828801610fb6565b91505092959194509250565b6000806040838503121561119957600080fd5b60006111a785828601611049565b92505060206111b885828601610fb6565b9150509250929050565b6000806000606084860312156111d757600080fd5b60006111e586828701611049565b93505060206111f686828701611034565b925050604061120786828701610fb6565b9150509250925092565b61121a816113e3565b82525050565b61122981611455565b82525050565b600061123c6016836113c0565b91507f6e6f2070726f66696c6520666f722061646472657373000000000000000000006000830152602082019050919050565b6060820160008201516112856000850182611302565b5060208201516112986020850182611211565b5060408201516112ab6040850182611211565b50505050565b6060820160008201516112c76000850182611220565b5060208201516112da6020850182611211565b5060408201516112ed60408501826112f3565b50505050565b6112fc81611402565b82525050565b61130b8161143e565b82525050565b6000602082019050818103600083015261132a8161122f565b9050919050565b6000606082019050611346600083018461126f565b92915050565b600060608201905061136160008301846112b1565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561138a57600080fd5b8060405250919050565b600067ffffffffffffffff8211156113ab57600080fd5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b60006113dc8261141e565b9050919050565b60008115159050919050565b60008190506113fd82611476565b919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611460826113ef565b9050919050565b82818337600083830152505050565b6002811061148057fe5b50565b61148c816113d1565b811461149757600080fd5b50565b6114a3816113e3565b81146114ae57600080fd5b50565b6114ba81611402565b81146114c557600080fd5b50565b6114d181611448565b81146114dc57600080fd5b5056fea26469706673582212209478e7fb1014c074e0f3af0d78b25e895b7c107185b844adc16d8b8212e594c864736f6c634300060c0033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c806341e517d61161004e57806341e517d6146100c957806350cb34b8146100e557806352af9c4b14610101578063c5e4dd821461013e57610070565b806324373d95146100755780632f54ced51461009157806340129a40146100ad575b600080fd5b61008f600480360381019061008a91906111c2565b610169565b005b6100ab60048036038101906100a6919061109a565b610552565b005b6100c760048036038101906100c2919061105e565b6105ab565b005b6100e360048036038101906100de919061105e565b610718565b005b6100ff60048036038101906100fa91906110db565b6108e3565b005b34801561010d57600080fd5b5061012860048036038101906101239190611186565b610bab565b604051610135919061134c565b60405180910390f35b34801561014a57600080fd5b50610153610dca565b6040516101609190611331565b60405180910390f35b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166101c157600080fd5b600060018111156101ce57fe5b8360ff1660018111156101dd57fe5b60018111156101e857fe5b1415610389576000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160000160019054906101000a900460ff161561024a57600080fd5b610252610e63565b600181602001901515908115158152505060008160000190600181111561027557fe5b9081600181111561028257fe5b815250508281604001906fffffffffffffffffffffffffffffffff1690816fffffffffffffffffffffffffffffffff1681525050806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160008201518160000160006101000a81548160ff0219169083600181111561031c57fe5b021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055509050505061054d565b60018081111561039557fe5b8360ff1660018111156103a457fe5b60018111156103af57fe5b141561054c576000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060070160000160019054906101000a900460ff161561041157600080fd5b610419610e63565b600181602001901515908115158152505060018160000190600181111561043c57fe5b9081600181111561044957fe5b815250508281604001906fffffffffffffffffffffffffffffffff1690816fffffffffffffffffffffffffffffffff1681525050806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060070160008201518160000160006101000a81548160ff021916908360018111156104e357fe5b021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550905050505b5b505050565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030190805190602001906105a7929190610ea3565b5050565b66354a6ba7a1800034146105be57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661064c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064390611311565b60405180910390fd5b610654610f23565b6312cc030042018160000181815250508281602001901515908115158152505081816040019015159081151581525050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548160ff021916908315150217905550905050505050565b80156107365766470de4df820000341461073157600080fd5b61074a565b66354a6ba7a18000341461074957600080fd5b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166107d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cf90611311565b60405180910390fd5b6312cc030042016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160000181905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160010160016101000a81548160ff021916908315150217905550816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160010160006101000a81548160ff0219169083151502179055505050565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161561093c57600080fd5b610944610f48565b6001816000019015159081151581525050848160200181905250838160400181905250828160600181905250806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160010190805190602001906109eb929190610ea3565b506040820151816002019080519060200190610a08929190610ea3565b506060820151816003019080519060200190610a25929190610ea3565b506080820151816004016000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548160ff021916908315150217905550505060a08201518160060160008201518160000160006101000a81548160ff02191690836001811115610aa857fe5b021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505060c08201518160070160008201518160000160006101000a81548160ff02191690836001811115610b3b57fe5b021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050509050505050505050565b610bb3610e63565b600180811115610bbf57fe5b60ff168360ff161115610bd157600080fd5b60006001811115610bde57fe5b8360ff166001811115610bed57fe5b6001811115610bf857fe5b1415610ce3576000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006016040518060600160405290816000820160009054906101000a900460ff166001811115610c6857fe5b6001811115610c7357fe5b81526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815250509050610dc4565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206007016040518060600160405290816000820160009054906101000a900460ff166001811115610d4d57fe5b6001811115610d5857fe5b81526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152505090505b92915050565b610dd2610f23565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401604051806060016040529081600082015481526020016001820160009054906101000a900460ff161515151581526020016001820160019054906101000a900460ff161515151581525050905090565b604051806060016040528060006001811115610e7b57fe5b815260200160001515815260200160006fffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610ee457805160ff1916838001178555610f12565b82800160010185558215610f12579182015b82811115610f11578251825591602001919060010190610ef6565b5b509050610f1f9190610f99565b5090565b6040518060600160405280600081526020016000151581526020016000151581525090565b6040518060e00160405280600015158152602001606081526020016060815260200160608152602001610f79610f23565b8152602001610f86610e63565b8152602001610f93610e63565b81525090565b5b80821115610fb2576000816000905550600101610f9a565b5090565b600081359050610fc581611483565b92915050565b600081359050610fda8161149a565b92915050565b600082601f830112610ff157600080fd5b8135611004610fff82611394565b611367565b9150808252602083016020830185838301111561102057600080fd5b61102b838284611467565b50505092915050565b600081359050611043816114b1565b92915050565b600081359050611058816114c8565b92915050565b6000806040838503121561107157600080fd5b600061107f85828601610fcb565b925050602061109085828601610fcb565b9150509250929050565b6000602082840312156110ac57600080fd5b600082013567ffffffffffffffff8111156110c657600080fd5b6110d284828501610fe0565b91505092915050565b600080600080608085870312156110f157600080fd5b600085013567ffffffffffffffff81111561110b57600080fd5b61111787828801610fe0565b945050602085013567ffffffffffffffff81111561113457600080fd5b61114087828801610fe0565b935050604085013567ffffffffffffffff81111561115d57600080fd5b61116987828801610fe0565b925050606061117a87828801610fb6565b91505092959194509250565b6000806040838503121561119957600080fd5b60006111a785828601611049565b92505060206111b885828601610fb6565b9150509250929050565b6000806000606084860312156111d757600080fd5b60006111e586828701611049565b93505060206111f686828701611034565b925050604061120786828701610fb6565b9150509250925092565b61121a816113e3565b82525050565b61122981611455565b82525050565b600061123c6016836113c0565b91507f6e6f2070726f66696c6520666f722061646472657373000000000000000000006000830152602082019050919050565b6060820160008201516112856000850182611302565b5060208201516112986020850182611211565b5060408201516112ab6040850182611211565b50505050565b6060820160008201516112c76000850182611220565b5060208201516112da6020850182611211565b5060408201516112ed60408501826112f3565b50505050565b6112fc81611402565b82525050565b61130b8161143e565b82525050565b6000602082019050818103600083015261132a8161122f565b9050919050565b6000606082019050611346600083018461126f565b92915050565b600060608201905061136160008301846112b1565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561138a57600080fd5b8060405250919050565b600067ffffffffffffffff8211156113ab57600080fd5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b60006113dc8261141e565b9050919050565b60008115159050919050565b60008190506113fd82611476565b919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611460826113ef565b9050919050565b82818337600083830152505050565b6002811061148057fe5b50565b61148c816113d1565b811461149757600080fd5b50565b6114a3816113e3565b81146114ae57600080fd5b50565b6114ba81611402565b81146114c557600080fd5b50565b6114d181611448565b81146114dc57600080fd5b5056fea26469706673582212209478e7fb1014c074e0f3af0d78b25e895b7c107185b844adc16d8b8212e594c864736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "100:3547:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "100:3547:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2744:901;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1658:139;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;680:434;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1120:532;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2322:416;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1920:396;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1803:111;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2744:901;2884:8;:20;2893:10;2884:20;;;;;;;;;;;;;;;:28;;;;;;;;;;;;2876:37;;;;;;2958:21;2927:52;;;;;;;;2943:10;2927:27;;;;;;;;;;:52;;;;;;;;;2923:716;;;3004:8;:20;3013:10;3004:20;;;;;;;;;;;;;;;:37;;:45;;;;;;;;;;;;3003:46;2995:55;;;;;;3064:21;;:::i;:::-;3113:4;3100:2;:10;;:17;;;;;;;;;;;3152:21;3131:2;:18;;:42;;;;;;;;;;;;;;;;;;;;;;;3197:4;3187:2;:7;;:14;;;;;;;;;;;3255:2;3215:8;:20;3224:10;3215:20;;;;;;;;;;;;;;;:37;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2923:716;;;;3317:24;3286:55;;;;;;;;3302:10;3286:27;;;;;;;;;;:55;;;;;;;;;3282:357;;;3366:8;:20;3375:10;3366:20;;;;;;;;;;;;;;;:40;;:48;;;;;;;;;;;;3365:49;3357:58;;;;;;3429:21;;:::i;:::-;3478:4;3465:2;:10;;:17;;;;;;;;;;;3517:24;3496:2;:18;;:45;;;;;;;;;;;;;;;;;;;;;;;3565:4;3555:2;:7;;:14;;;;;;;;;;;3626:2;3583:8;:20;3592:10;3583:20;;;;;;;;;;;;;;;:40;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3282:357;;2923:716;2744:901;;;:::o;1658:139::-;1774:16;1737:8;:20;1746:10;1737:20;;;;;;;;;;;;;;;:34;;:53;;;;;;;;;;;;:::i;:::-;;1658:139;:::o;680:434::-;793:11;780:9;:24;772:33;;;;;;823:8;:20;832:10;823:20;;;;;;;;;;;;;;;:28;;;;;;;;;;;;815:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;889:16;;:::i;:::-;954:13;935:15;:33;916:1;:16;;:52;;;;;1010:27;978:1;:29;;:59;;;;;;;;;;;1058:6;1047:1;:8;;:17;;;;;;;;;;;1106:1;1075:8;:20;1084:10;1075:20;;;;;;;;;;;;;;;:28;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;680:434;;;:::o;1120:532::-;1218:6;1214:117;;;1259:10;1246:9;:23;1238:32;;;;;;1214:117;;;1319:11;1306:9;:24;1298:33;;;;;;1214:117;1350:8;:20;1359:10;1350:20;;;;;;;;;;;;;;;:28;;;;;;;;;;;;1342:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1481:13;1462:15;:33;1416:8;:20;1425:10;1416:20;;;;;;;;;;;;;;;:28;;:43;;:79;;;;1543:6;1505:8;:20;1514:10;1505:20;;;;;;;;;;;;;;;:28;;:35;;;:44;;;;;;;;;;;;;;;;;;1618:27;1559:8;:20;1568:10;1559:20;;;;;;;;;;;;;;;:28;;:56;;;:86;;;;;;;;;;;;;;;;;;1120:532;;:::o;2322:416::-;2509:8;:20;2518:10;2509:20;;;;;;;;;;;;;;;:28;;;;;;;;;;;;2508:29;2500:38;;;;;;2549:16;;:::i;:::-;2588:4;2576:1;:9;;:16;;;;;;;;;;;2616:9;2602:1;:11;;:23;;;;2648:8;2635:1;:10;;:21;;;;2684:13;2666:1;:15;;:31;;;;2730:1;2707:8;:20;2716:10;2707:20;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2322:416;;;;;:::o;1920:396::-;2003:18;;:::i;:::-;2061:24;2055:31;;;;;;;;2041:45;;:10;:45;;;;2033:54;;;;;;2132:21;2101:52;;;;;;;;2117:10;2101:27;;;;;;;;;;:52;;;;;;;;;2097:213;;;2176:8;:20;2185:10;2176:20;;;;;;;;;;;;;;;:37;;2169:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2097:213;2259:8;:20;2268:10;2259:20;;;;;;;;;;;;;;;:40;;2252:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1920:396;;;;;:::o;1803:111::-;1846:14;;:::i;:::-;1879:8;:20;1888:10;1879:20;;;;;;;;;;;;;;;:28;;1872:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1803:111;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:124::-;;219:6;206:20;197:29;;231:30;255:5;231:30;:::i;:::-;191:75;;;;:::o;274:440::-;;375:3;368:4;360:6;356:17;352:27;342:2;;393:1;390;383:12;342:2;430:6;417:20;452:64;467:48;508:6;467:48;:::i;:::-;452:64;:::i;:::-;443:73;;536:6;529:5;522:21;572:4;564:6;560:17;605:4;598:5;594:16;640:3;631:6;626:3;622:16;619:25;616:2;;;657:1;654;647:12;616:2;667:41;701:6;696:3;691;667:41;:::i;:::-;335:379;;;;;;;:::o;722:130::-;;802:6;789:20;780:29;;814:33;841:5;814:33;:::i;:::-;774:78;;;;:::o;859:126::-;;937:6;924:20;915:29;;949:31;974:5;949:31;:::i;:::-;909:76;;;;:::o;992:354::-;;;1107:2;1095:9;1086:7;1082:23;1078:32;1075:2;;;1123:1;1120;1113:12;1075:2;1158:1;1175:50;1217:7;1208:6;1197:9;1193:22;1175:50;:::i;:::-;1165:60;;1137:94;1262:2;1280:50;1322:7;1313:6;1302:9;1298:22;1280:50;:::i;:::-;1270:60;;1241:95;1069:277;;;;;:::o;1353:345::-;;1466:2;1454:9;1445:7;1441:23;1437:32;1434:2;;;1482:1;1479;1472:12;1434:2;1545:1;1534:9;1530:17;1517:31;1568:18;1560:6;1557:30;1554:2;;;1600:1;1597;1590:12;1554:2;1620:62;1674:7;1665:6;1654:9;1650:22;1620:62;:::i;:::-;1610:72;;1496:192;1428:270;;;;:::o;1705:929::-;;;;;1887:3;1875:9;1866:7;1862:23;1858:33;1855:2;;;1904:1;1901;1894:12;1855:2;1967:1;1956:9;1952:17;1939:31;1990:18;1982:6;1979:30;1976:2;;;2022:1;2019;2012:12;1976:2;2042:62;2096:7;2087:6;2076:9;2072:22;2042:62;:::i;:::-;2032:72;;1918:192;2169:2;2158:9;2154:18;2141:32;2193:18;2185:6;2182:30;2179:2;;;2225:1;2222;2215:12;2179:2;2245:62;2299:7;2290:6;2279:9;2275:22;2245:62;:::i;:::-;2235:72;;2120:193;2372:2;2361:9;2357:18;2344:32;2396:18;2388:6;2385:30;2382:2;;;2428:1;2425;2418:12;2382:2;2448:62;2502:7;2493:6;2482:9;2478:22;2448:62;:::i;:::-;2438:72;;2323:193;2547:2;2565:53;2610:7;2601:6;2590:9;2586:22;2565:53;:::i;:::-;2555:63;;2526:98;1849:785;;;;;;;:::o;2641:362::-;;;2760:2;2748:9;2739:7;2735:23;2731:32;2728:2;;;2776:1;2773;2766:12;2728:2;2811:1;2828:51;2871:7;2862:6;2851:9;2847:22;2828:51;:::i;:::-;2818:61;;2790:95;2916:2;2934:53;2979:7;2970:6;2959:9;2955:22;2934:53;:::i;:::-;2924:63;;2895:98;2722:281;;;;;:::o;3010:487::-;;;;3146:2;3134:9;3125:7;3121:23;3117:32;3114:2;;;3162:1;3159;3152:12;3114:2;3197:1;3214:51;3257:7;3248:6;3237:9;3233:22;3214:51;:::i;:::-;3204:61;;3176:95;3302:2;3320:53;3365:7;3356:6;3345:9;3341:22;3320:53;:::i;:::-;3310:63;;3281:98;3410:2;3428:53;3473:7;3464:6;3453:9;3449:22;3428:53;:::i;:::-;3418:63;;3389:98;3108:389;;;;;:::o;3504:94::-;3571:21;3586:5;3571:21;:::i;:::-;3566:3;3559:34;3553:45;;:::o;3605:148::-;3694:53;3741:5;3694:53;:::i;:::-;3689:3;3682:66;3676:77;;:::o;3761:322::-;;3921:67;3985:2;3980:3;3921:67;:::i;:::-;3914:74;;4021:24;4017:1;4012:3;4008:11;4001:45;4074:2;4069:3;4065:12;4058:19;;3907:176;;;:::o;4148:647::-;4285:4;4280:3;4276:14;4378:4;4371:5;4367:16;4361:23;4390:63;4447:4;4442:3;4438:14;4424:12;4390:63;:::i;:::-;4305:154;4555:4;4548:5;4544:16;4538:23;4567:57;4618:4;4613:3;4609:14;4595:12;4567:57;:::i;:::-;4469:161;4705:4;4698:5;4694:16;4688:23;4717:57;4768:4;4763:3;4759:14;4745:12;4717:57;:::i;:::-;4640:140;4258:537;;;:::o;4867:658::-;5014:4;5009:3;5005:14;5108:4;5101:5;5097:16;5091:23;5120:79;5193:4;5188:3;5184:14;5170:12;5120:79;:::i;:::-;5034:171;5281:4;5274:5;5270:16;5264:23;5293:57;5344:4;5339:3;5335:14;5321:12;5293:57;:::i;:::-;5215:141;5429:4;5422:5;5418:16;5412:23;5441:63;5498:4;5493:3;5489:14;5475:12;5441:63;:::i;:::-;5366:144;4987:538;;;:::o;5532:103::-;5605:24;5623:5;5605:24;:::i;:::-;5600:3;5593:37;5587:48;;:::o;5642:103::-;5715:24;5733:5;5715:24;:::i;:::-;5710:3;5703:37;5697:48;;:::o;5752:416::-;;5952:2;5941:9;5937:18;5929:26;;6002:9;5996:4;5992:20;5988:1;5977:9;5973:17;5966:47;6027:131;6153:4;6027:131;:::i;:::-;6019:139;;5923:245;;;:::o;6175:310::-;;6346:2;6335:9;6331:18;6323:26;;6360:115;6472:1;6461:9;6457:17;6448:6;6360:115;:::i;:::-;6317:168;;;;:::o;6492:330::-;;6673:2;6662:9;6658:18;6650:26;;6687:125;6809:1;6798:9;6794:17;6785:6;6687:125;:::i;:::-;6644:178;;;;:::o;6829:256::-;;6891:2;6885:9;6875:19;;6929:4;6921:6;6917:17;7028:6;7016:10;7013:22;6992:18;6980:10;6977:34;6974:62;6971:2;;;7049:1;7046;7039:12;6971:2;7069:10;7065:2;7058:22;6869:216;;;;:::o;7092:321::-;;7235:18;7227:6;7224:30;7221:2;;;7267:1;7264;7257:12;7221:2;7334:4;7330:9;7323:4;7315:6;7311:17;7307:33;7299:41;;7398:4;7392;7388:15;7380:23;;7158:255;;;:::o;7421:163::-;;7536:6;7531:3;7524:19;7573:4;7568:3;7564:14;7549:29;;7517:67;;;;:::o;7592:91::-;;7654:24;7672:5;7654:24;:::i;:::-;7643:35;;7637:46;;;:::o;7690:85::-;;7763:5;7756:13;7749:21;7738:32;;7732:43;;;:::o;7782:142::-;;7862:5;7851:16;;7868:51;7913:5;7868:51;:::i;:::-;7845:79;;;:::o;7931:113::-;;8004:34;7997:5;7993:46;7982:57;;7976:68;;;:::o;8051:121::-;;8124:42;8117:5;8113:54;8102:65;;8096:76;;;:::o;8179:72::-;;8241:5;8230:16;;8224:27;;;:::o;8258:81::-;;8329:4;8322:5;8318:16;8307:27;;8301:38;;;:::o;8346:142::-;;8441:42;8477:5;8441:42;:::i;:::-;8428:55;;8422:66;;;:::o;8496:145::-;8577:6;8572:3;8567;8554:30;8633:1;8624:6;8619:3;8615:16;8608:27;8547:94;;;:::o;8649:109::-;8736:1;8729:5;8726:12;8716:2;;8742:9;8716:2;8710:48;:::o;8765:117::-;8834:24;8852:5;8834:24;:::i;:::-;8827:5;8824:35;8814:2;;8873:1;8870;8863:12;8814:2;8808:74;:::o;8889:111::-;8955:21;8970:5;8955:21;:::i;:::-;8948:5;8945:32;8935:2;;8991:1;8988;8981:12;8935:2;8929:71;:::o;9007:117::-;9076:24;9094:5;9076:24;:::i;:::-;9069:5;9066:35;9056:2;;9115:1;9112;9105:12;9056:2;9050:74;:::o;9131:113::-;9198:22;9214:5;9198:22;:::i;:::-;9191:5;9188:33;9178:2;;9235:1;9232;9225:12;9178:2;9172:72;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.0 <8.10.0;\npragma experimental ABIEncoderV2;\n\ncontract Licenses {\n    struct License {\n        uint expirationDate;\n        bool correctiveLensesRestriction;\n        bool realId;\n    }\n\n    enum CertificateType {BIRTH, MARRIAGE}\n\n    struct VitalRecord {\n        CertificateType certificateType;\n        bool isValue;\n        uint128 date;\n    }\n\n    struct Profile {\n        bool isValue;\n        bytes firstName;\n        bytes lastName;\n        bytes streetAddress;\n        License license;\n        VitalRecord birthCertificate;\n        VitalRecord marriageCertificate;\n    }\n\n    mapping(address => Profile) profiles;\n\n    function newLicense(bool correctiveLensesRestriction, bool realId) public payable {\n        require(msg.value == 0.015 ether);\n        require(profiles[msg.sender].isValue, \"no profile for address\");\n\n        License memory l;\n\n        l.expirationDate = block.timestamp + (10 * 365 days);\n        l.correctiveLensesRestriction = correctiveLensesRestriction;\n        l.realId = realId;\n\n        profiles[msg.sender].license = l;\n    }\n\n    function renewLicense(bool correctiveLensesRestriction, bool realId) public payable {\n        if (realId)\n            require(msg.value == 0.02 ether);\n        else \n            require(msg.value == 0.015 ether);\n\n        require(profiles[msg.sender].isValue, \"no profile for address\");\n\n        profiles[msg.sender].license.expirationDate = block.timestamp + (10 * 365 days);\n        profiles[msg.sender].license.realId = realId;\n        profiles[msg.sender].license.correctiveLensesRestriction = correctiveLensesRestriction;\n    }\n\n    function updateAddress(bytes memory newStreetAddress) public payable {\n        profiles[msg.sender].streetAddress = newStreetAddress;\n    }\n\n    function getLicense() public view returns (License memory) {\n        return profiles[msg.sender].license;\n    }\n\n    function getVitalRecord(uint8 recordType, address forCitizen) public view returns (VitalRecord memory) {\n        require(recordType <= uint8(CertificateType.MARRIAGE));\n        if (CertificateType(recordType) == CertificateType.BIRTH) {\n            return profiles[forCitizen].birthCertificate;\n        }\n        else {\n            return profiles[forCitizen].marriageCertificate;\n        }\n    }\n\n    function addProfile(\n        bytes memory firstName,\n        bytes memory lastName,\n        bytes memory streetAddress,\n        address forCitizen\n    ) public payable {\n        require(!profiles[forCitizen].isValue);\n\n        Profile memory p;\n\n        p.isValue = true;\n        p.firstName = firstName;\n        p.lastName = lastName;\n        p.streetAddress = streetAddress;\n        profiles[forCitizen] = p;\n    }\n\n    function saveVitalRecord(\n        uint8 recordType,\n        uint128 date,\n        address forCitizen\n    ) public payable {\n        require(profiles[forCitizen].isValue);\n        if (CertificateType(recordType) == CertificateType.BIRTH) {\n            require(!profiles[forCitizen].birthCertificate.isValue);\n            VitalRecord memory vr;\n\n            vr.isValue = true;\n            vr.certificateType = CertificateType.BIRTH;\n            vr.date = date;\n            profiles[forCitizen].birthCertificate = vr;\n        }\n        else if (CertificateType(recordType) == CertificateType.MARRIAGE) {\n            require(!profiles[forCitizen].marriageCertificate.isValue);\n            VitalRecord memory vr;\n\n            vr.isValue = true;\n            vr.certificateType = CertificateType.MARRIAGE;\n            vr.date = date;\n            profiles[forCitizen].marriageCertificate = vr;\n        }\n    }\n}",
  "sourcePath": "/Users/seangalloway/Coding_Projects/College/9Spring_2022/764CS/project/dmv-backend/contracts/Licenses.sol",
  "ast": {
    "absolutePath": "project:/contracts/Licenses.sol",
    "exportedSymbols": {
      "Licenses": [
        391
      ]
    },
    "id": 392,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "8.10",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "65:33:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 391,
        "linearizedBaseContracts": [
          391
        ],
        "name": "Licenses",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Licenses.License",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 4,
                "mutability": "mutable",
                "name": "expirationDate",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 9,
                "src": "149:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "149:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "mutability": "mutable",
                "name": "correctiveLensesRestriction",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 9,
                "src": "178:32:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 5,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "178:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "realId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 9,
                "src": "220:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "220:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "License",
            "nodeType": "StructDefinition",
            "scope": 391,
            "src": "124:114:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Licenses.CertificateType",
            "id": 12,
            "members": [
              {
                "id": 10,
                "name": "BIRTH",
                "nodeType": "EnumValue",
                "src": "266:5:0"
              },
              {
                "id": 11,
                "name": "MARRIAGE",
                "nodeType": "EnumValue",
                "src": "273:8:0"
              }
            ],
            "name": "CertificateType",
            "nodeType": "EnumDefinition",
            "src": "244:38:0"
          },
          {
            "canonicalName": "Licenses.VitalRecord",
            "id": 19,
            "members": [
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "certificateType",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 19,
                "src": "317:31:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_CertificateType_$12",
                  "typeString": "enum Licenses.CertificateType"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 13,
                  "name": "CertificateType",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 12,
                  "src": "317:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_CertificateType_$12",
                    "typeString": "enum Licenses.CertificateType"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "isValue",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 19,
                "src": "358:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 15,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "358:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "date",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 19,
                "src": "380:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "380:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "VitalRecord",
            "nodeType": "StructDefinition",
            "scope": 391,
            "src": "288:111:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Licenses.Profile",
            "id": 34,
            "members": [
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "isValue",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 34,
                "src": "430:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 20,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "430:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "firstName",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 34,
                "src": "452:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 22,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "452:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "lastName",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 34,
                "src": "477:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 24,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "477:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "streetAddress",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 34,
                "src": "501:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 26,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "501:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "license",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 34,
                "src": "530:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_License_$9_storage_ptr",
                  "typeString": "struct Licenses.License"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 28,
                  "name": "License",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 9,
                  "src": "530:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_License_$9_storage_ptr",
                    "typeString": "struct Licenses.License"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "birthCertificate",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 34,
                "src": "555:28:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_VitalRecord_$19_storage_ptr",
                  "typeString": "struct Licenses.VitalRecord"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 30,
                  "name": "VitalRecord",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 19,
                  "src": "555:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VitalRecord_$19_storage_ptr",
                    "typeString": "struct Licenses.VitalRecord"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "marriageCertificate",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 34,
                "src": "593:31:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_VitalRecord_$19_storage_ptr",
                  "typeString": "struct Licenses.VitalRecord"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 32,
                  "name": "VitalRecord",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 19,
                  "src": "593:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VitalRecord_$19_storage_ptr",
                    "typeString": "struct Licenses.VitalRecord"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Profile",
            "nodeType": "StructDefinition",
            "scope": 391,
            "src": "405:226:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 38,
            "mutability": "mutable",
            "name": "profiles",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 391,
            "src": "637:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
              "typeString": "mapping(address => struct Licenses.Profile)"
            },
            "typeName": {
              "id": 37,
              "keyType": {
                "id": 35,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "645:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "637:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
                "typeString": "mapping(address => struct Licenses.Profile)"
              },
              "valueType": {
                "contractScope": null,
                "id": 36,
                "name": "Profile",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 34,
                "src": "656:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Profile_$34_storage_ptr",
                  "typeString": "struct Licenses.Profile"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "762:352:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 46,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "780:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "780:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "302e303135",
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "793:11:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15000000000000000_by_1",
                            "typeString": "int_const 15000000000000000"
                          },
                          "value": "0.015"
                        },
                        "src": "780:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 45,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "772:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "772:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "772:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 53,
                            "name": "profiles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "823:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
                              "typeString": "mapping(address => struct Licenses.Profile storage ref)"
                            }
                          },
                          "id": 56,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 54,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "832:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 55,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "832:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "823:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Profile_$34_storage",
                            "typeString": "struct Licenses.Profile storage ref"
                          }
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "823:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f2070726f66696c6520666f722061646472657373",
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "853:24:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19e3f6ca68d1a7e671a5b39fbdf4bc9d928903bf736b31ebdd9944c32e2ebe7d",
                          "typeString": "literal_string \"no profile for address\""
                        },
                        "value": "no profile for address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19e3f6ca68d1a7e671a5b39fbdf4bc9d928903bf736b31ebdd9944c32e2ebe7d",
                          "typeString": "literal_string \"no profile for address\""
                        }
                      ],
                      "id": 52,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "815:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "815:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "815:63:0"
                },
                {
                  "assignments": [
                    62
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62,
                      "mutability": "mutable",
                      "name": "l",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 96,
                      "src": "889:16:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_License_$9_memory_ptr",
                        "typeString": "struct Licenses.License"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 61,
                        "name": "License",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 9,
                        "src": "889:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_License_$9_storage_ptr",
                          "typeString": "struct Licenses.License"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 63,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "889:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "l",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "916:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_License_$9_memory_ptr",
                          "typeString": "struct Licenses.License memory"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expirationDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4,
                      "src": "916:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 67,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "935:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "935:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_315360000_by_1",
                              "typeString": "int_const 315360000"
                            },
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "954:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "333635",
                              "id": 70,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "959:8:0",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_31536000_by_1",
                                "typeString": "int_const 31536000"
                              },
                              "value": "365"
                            },
                            "src": "954:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_315360000_by_1",
                              "typeString": "int_const 315360000"
                            }
                          }
                        ],
                        "id": 72,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "953:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_315360000_by_1",
                          "typeString": "int_const 315360000"
                        }
                      },
                      "src": "935:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "916:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "916:52:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "l",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "978:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_License_$9_memory_ptr",
                          "typeString": "struct Licenses.License memory"
                        }
                      },
                      "id": 78,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "correctiveLensesRestriction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "978:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "correctiveLensesRestriction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1010:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "978:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "978:59:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 82,
                        "name": "l",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "1047:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_License_$9_memory_ptr",
                          "typeString": "struct Licenses.License memory"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "realId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "1047:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 85,
                      "name": "realId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1058:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1047:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1047:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 88,
                          "name": "profiles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "1075:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
                            "typeString": "mapping(address => struct Licenses.Profile storage ref)"
                          }
                        },
                        "id": 91,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 89,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1084:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1084:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1075:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Profile_$34_storage",
                          "typeString": "struct Licenses.Profile storage ref"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "license",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "1075:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_License_$9_storage",
                        "typeString": "struct Licenses.License storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 93,
                      "name": "l",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "1106:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_License_$9_memory_ptr",
                        "typeString": "struct Licenses.License memory"
                      }
                    },
                    "src": "1075:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_License_$9_storage",
                      "typeString": "struct Licenses.License storage ref"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1075:32:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "40129a40",
            "id": 97,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newLicense",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "correctiveLensesRestriction",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 97,
                  "src": "700:32:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "700:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "realId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 97,
                  "src": "734:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "734:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "699:47:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "762:0:0"
            },
            "scope": 391,
            "src": "680:434:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "1204:448:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 104,
                    "name": "realId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 101,
                    "src": "1218:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 113,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1306:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1306:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "302e303135",
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1319:11:0",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_15000000000000000_by_1",
                              "typeString": "int_const 15000000000000000"
                            },
                            "value": "0.015"
                          },
                          "src": "1306:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 112,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "1298:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                          "typeString": "function (bool) pure"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1298:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 118,
                    "nodeType": "ExpressionStatement",
                    "src": "1298:33:0"
                  },
                  "id": 119,
                  "nodeType": "IfStatement",
                  "src": "1214:117:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 106,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1246:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1246:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "302e3032",
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1259:10:0",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20000000000000000_by_1",
                              "typeString": "int_const 20000000000000000"
                            },
                            "value": "0.02"
                          },
                          "src": "1246:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 105,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "1238:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                          "typeString": "function (bool) pure"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1238:32:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 111,
                    "nodeType": "ExpressionStatement",
                    "src": "1238:32:0"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 121,
                            "name": "profiles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "1350:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
                              "typeString": "mapping(address => struct Licenses.Profile storage ref)"
                            }
                          },
                          "id": 124,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 122,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1359:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1359:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1350:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Profile_$34_storage",
                            "typeString": "struct Licenses.Profile storage ref"
                          }
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "1350:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f2070726f66696c6520666f722061646472657373",
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1380:24:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19e3f6ca68d1a7e671a5b39fbdf4bc9d928903bf736b31ebdd9944c32e2ebe7d",
                          "typeString": "literal_string \"no profile for address\""
                        },
                        "value": "no profile for address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19e3f6ca68d1a7e671a5b39fbdf4bc9d928903bf736b31ebdd9944c32e2ebe7d",
                          "typeString": "literal_string \"no profile for address\""
                        }
                      ],
                      "id": 120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1342:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1342:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1342:63:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 129,
                            "name": "profiles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "1416:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
                              "typeString": "mapping(address => struct Licenses.Profile storage ref)"
                            }
                          },
                          "id": 132,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 130,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1425:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1425:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1416:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Profile_$34_storage",
                            "typeString": "struct Licenses.Profile storage ref"
                          }
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "license",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29,
                        "src": "1416:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_License_$9_storage",
                          "typeString": "struct Licenses.License storage ref"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expirationDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4,
                      "src": "1416:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 135,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1462:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1462:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_315360000_by_1",
                              "typeString": "int_const 315360000"
                            },
                            "id": 139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1481:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "333635",
                              "id": 138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1486:8:0",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_31536000_by_1",
                                "typeString": "int_const 31536000"
                              },
                              "value": "365"
                            },
                            "src": "1481:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_315360000_by_1",
                              "typeString": "int_const 315360000"
                            }
                          }
                        ],
                        "id": 140,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1480:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_315360000_by_1",
                          "typeString": "int_const 315360000"
                        }
                      },
                      "src": "1462:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1416:79:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:79:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 144,
                            "name": "profiles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "1505:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
                              "typeString": "mapping(address => struct Licenses.Profile storage ref)"
                            }
                          },
                          "id": 147,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 145,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1514:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1514:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1505:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Profile_$34_storage",
                            "typeString": "struct Licenses.Profile storage ref"
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "license",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29,
                        "src": "1505:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_License_$9_storage",
                          "typeString": "struct Licenses.License storage ref"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "realId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "1505:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 150,
                      "name": "realId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "1543:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1505:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1505:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 153,
                            "name": "profiles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "1559:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
                              "typeString": "mapping(address => struct Licenses.Profile storage ref)"
                            }
                          },
                          "id": 156,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 154,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1568:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1568:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1559:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Profile_$34_storage",
                            "typeString": "struct Licenses.Profile storage ref"
                          }
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "license",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29,
                        "src": "1559:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_License_$9_storage",
                          "typeString": "struct Licenses.License storage ref"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "correctiveLensesRestriction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "1559:56:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 159,
                      "name": "correctiveLensesRestriction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "1618:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1559:86:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "1559:86:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "41e517d6",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "renewLicense",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "correctiveLensesRestriction",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 163,
                  "src": "1142:32:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1142:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "realId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 163,
                  "src": "1176:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1176:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1141:47:0"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1204:0:0"
            },
            "scope": 391,
            "src": "1120:532:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "1727:70:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 168,
                          "name": "profiles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "1737:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
                            "typeString": "mapping(address => struct Licenses.Profile storage ref)"
                          }
                        },
                        "id": 171,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 169,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1746:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1746:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1737:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Profile_$34_storage",
                          "typeString": "struct Licenses.Profile storage ref"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "streetAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27,
                      "src": "1737:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 173,
                      "name": "newStreetAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "1774:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1737:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "1737:53:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2f54ced5",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "newStreetAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 177,
                  "src": "1681:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1681:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1680:31:0"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1727:0:0"
            },
            "scope": 391,
            "src": "1658:139:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "1862:52:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 182,
                        "name": "profiles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "1879:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
                          "typeString": "mapping(address => struct Licenses.Profile storage ref)"
                        }
                      },
                      "id": 185,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 183,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1888:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1888:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1879:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Profile_$34_storage",
                        "typeString": "struct Licenses.Profile storage ref"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "license",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 29,
                    "src": "1879:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_License_$9_storage",
                      "typeString": "struct Licenses.License storage ref"
                    }
                  },
                  "functionReturnParameters": 181,
                  "id": 187,
                  "nodeType": "Return",
                  "src": "1872:35:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c5e4dd82",
            "id": 189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLicense",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1822:2:0"
            },
            "returnParameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 189,
                  "src": "1846:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_License_$9_memory_ptr",
                    "typeString": "struct Licenses.License"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 179,
                    "name": "License",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9,
                    "src": "1846:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_License_$9_storage_ptr",
                      "typeString": "struct Licenses.License"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1845:16:0"
            },
            "scope": 391,
            "src": "1803:111:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 227,
              "nodeType": "Block",
              "src": "2023:293:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 199,
                          "name": "recordType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 191,
                          "src": "2041:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 202,
                                "name": "CertificateType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "2061:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_CertificateType_$12_$",
                                  "typeString": "type(enum Licenses.CertificateType)"
                                }
                              },
                              "id": 203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "MARRIAGE",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2061:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CertificateType_$12",
                                "typeString": "enum Licenses.CertificateType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_CertificateType_$12",
                                "typeString": "enum Licenses.CertificateType"
                              }
                            ],
                            "id": 201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2055:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 200,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "2055:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2055:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "2041:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2033:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2033:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2033:54:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_CertificateType_$12",
                      "typeString": "enum Licenses.CertificateType"
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 209,
                          "name": "recordType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 191,
                          "src": "2117:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 208,
                        "name": "CertificateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2101:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CertificateType_$12_$",
                          "typeString": "type(enum Licenses.CertificateType)"
                        }
                      },
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2101:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CertificateType_$12",
                        "typeString": "enum Licenses.CertificateType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 211,
                        "name": "CertificateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2132:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CertificateType_$12_$",
                          "typeString": "type(enum Licenses.CertificateType)"
                        }
                      },
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BIRTH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2132:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CertificateType_$12",
                        "typeString": "enum Licenses.CertificateType"
                      }
                    },
                    "src": "2101:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 225,
                    "nodeType": "Block",
                    "src": "2238:72:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 220,
                              "name": "profiles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "2259:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
                                "typeString": "mapping(address => struct Licenses.Profile storage ref)"
                              }
                            },
                            "id": 222,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 221,
                              "name": "forCitizen",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "2268:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2259:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Profile_$34_storage",
                              "typeString": "struct Licenses.Profile storage ref"
                            }
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "marriageCertificate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "2259:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VitalRecord_$19_storage",
                            "typeString": "struct Licenses.VitalRecord storage ref"
                          }
                        },
                        "functionReturnParameters": 197,
                        "id": 224,
                        "nodeType": "Return",
                        "src": "2252:47:0"
                      }
                    ]
                  },
                  "id": 226,
                  "nodeType": "IfStatement",
                  "src": "2097:213:0",
                  "trueBody": {
                    "id": 219,
                    "nodeType": "Block",
                    "src": "2155:69:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 214,
                              "name": "profiles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "2176:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
                                "typeString": "mapping(address => struct Licenses.Profile storage ref)"
                              }
                            },
                            "id": 216,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 215,
                              "name": "forCitizen",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "2185:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2176:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Profile_$34_storage",
                              "typeString": "struct Licenses.Profile storage ref"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "birthCertificate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "2176:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VitalRecord_$19_storage",
                            "typeString": "struct Licenses.VitalRecord storage ref"
                          }
                        },
                        "functionReturnParameters": 197,
                        "id": 218,
                        "nodeType": "Return",
                        "src": "2169:44:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "52af9c4b",
            "id": 228,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVitalRecord",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "recordType",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 228,
                  "src": "1944:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1944:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "forCitizen",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 228,
                  "src": "1962:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1943:38:0"
            },
            "returnParameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 228,
                  "src": "2003:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VitalRecord_$19_memory_ptr",
                    "typeString": "struct Licenses.VitalRecord"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 195,
                    "name": "VitalRecord",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19,
                    "src": "2003:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VitalRecord_$19_storage_ptr",
                      "typeString": "struct Licenses.VitalRecord"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2002:20:0"
            },
            "scope": 391,
            "src": "1920:396:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 280,
              "nodeType": "Block",
              "src": "2490:248:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2508:29:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 240,
                              "name": "profiles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "2509:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
                                "typeString": "mapping(address => struct Licenses.Profile storage ref)"
                              }
                            },
                            "id": 242,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 241,
                              "name": "forCitizen",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 236,
                              "src": "2518:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2509:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Profile_$34_storage",
                              "typeString": "struct Licenses.Profile storage ref"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "2509:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2500:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2500:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "2500:38:0"
                },
                {
                  "assignments": [
                    248
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 248,
                      "mutability": "mutable",
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 280,
                      "src": "2549:16:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Profile_$34_memory_ptr",
                        "typeString": "struct Licenses.Profile"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 247,
                        "name": "Profile",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 34,
                        "src": "2549:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Profile_$34_storage_ptr",
                          "typeString": "struct Licenses.Profile"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 249,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2549:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "2576:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Profile_$34_memory_ptr",
                          "typeString": "struct Licenses.Profile memory"
                        }
                      },
                      "id": 252,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2576:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2588:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2576:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 256,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "2602:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Profile_$34_memory_ptr",
                          "typeString": "struct Licenses.Profile memory"
                        }
                      },
                      "id": 258,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "firstName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "2602:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 259,
                      "name": "firstName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 230,
                      "src": "2616:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2602:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "2602:23:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 262,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "2635:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Profile_$34_memory_ptr",
                          "typeString": "struct Licenses.Profile memory"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "2635:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 265,
                      "name": "lastName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 232,
                      "src": "2648:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2635:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "2635:21:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 268,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "2666:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Profile_$34_memory_ptr",
                          "typeString": "struct Licenses.Profile memory"
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "streetAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27,
                      "src": "2666:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 271,
                      "name": "streetAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "2684:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2666:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "2666:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 274,
                        "name": "profiles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "2707:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
                          "typeString": "mapping(address => struct Licenses.Profile storage ref)"
                        }
                      },
                      "id": 276,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 275,
                        "name": "forCitizen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "2716:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2707:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Profile_$34_storage",
                        "typeString": "struct Licenses.Profile storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 277,
                      "name": "p",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "2730:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Profile_$34_memory_ptr",
                        "typeString": "struct Licenses.Profile memory"
                      }
                    },
                    "src": "2707:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Profile_$34_storage",
                      "typeString": "struct Licenses.Profile storage ref"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "2707:24:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "50cb34b8",
            "id": 281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addProfile",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "firstName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 281,
                  "src": "2351:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2351:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 232,
                  "mutability": "mutable",
                  "name": "lastName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 281,
                  "src": "2383:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2383:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "streetAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 281,
                  "src": "2414:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2414:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "forCitizen",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 281,
                  "src": "2450:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2450:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2341:133:0"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2490:0:0"
            },
            "scope": 391,
            "src": "2322:416:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 389,
              "nodeType": "Block",
              "src": "2866:779:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 291,
                            "name": "profiles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "2884:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
                              "typeString": "mapping(address => struct Licenses.Profile storage ref)"
                            }
                          },
                          "id": 293,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 292,
                            "name": "forCitizen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "2893:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2884:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Profile_$34_storage",
                            "typeString": "struct Licenses.Profile storage ref"
                          }
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "2884:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 290,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2876:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2876:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "2876:37:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_CertificateType_$12",
                      "typeString": "enum Licenses.CertificateType"
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 298,
                          "name": "recordType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 283,
                          "src": "2943:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 297,
                        "name": "CertificateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2927:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CertificateType_$12_$",
                          "typeString": "type(enum Licenses.CertificateType)"
                        }
                      },
                      "id": 299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2927:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CertificateType_$12",
                        "typeString": "enum Licenses.CertificateType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 300,
                        "name": "CertificateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2958:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CertificateType_$12_$",
                          "typeString": "type(enum Licenses.CertificateType)"
                        }
                      },
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BIRTH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2958:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CertificateType_$12",
                        "typeString": "enum Licenses.CertificateType"
                      }
                    },
                    "src": "2927:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_CertificateType_$12",
                        "typeString": "enum Licenses.CertificateType"
                      },
                      "id": 347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 343,
                            "name": "recordType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "3302:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 342,
                          "name": "CertificateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "3286:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CertificateType_$12_$",
                            "typeString": "type(enum Licenses.CertificateType)"
                          }
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3286:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CertificateType_$12",
                          "typeString": "enum Licenses.CertificateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 345,
                          "name": "CertificateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "3317:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CertificateType_$12_$",
                            "typeString": "type(enum Licenses.CertificateType)"
                          }
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "MARRIAGE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3317:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CertificateType_$12",
                          "typeString": "enum Licenses.CertificateType"
                        }
                      },
                      "src": "3286:55:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 387,
                    "nodeType": "IfStatement",
                    "src": "3282:357:0",
                    "trueBody": {
                      "id": 386,
                      "nodeType": "Block",
                      "src": "3343:296:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "3365:49:0",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 349,
                                        "name": "profiles",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 38,
                                        "src": "3366:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
                                          "typeString": "mapping(address => struct Licenses.Profile storage ref)"
                                        }
                                      },
                                      "id": 351,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 350,
                                        "name": "forCitizen",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 287,
                                        "src": "3375:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3366:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Profile_$34_storage",
                                        "typeString": "struct Licenses.Profile storage ref"
                                      }
                                    },
                                    "id": 352,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "marriageCertificate",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 33,
                                    "src": "3366:40:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_VitalRecord_$19_storage",
                                      "typeString": "struct Licenses.VitalRecord storage ref"
                                    }
                                  },
                                  "id": 353,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "isValue",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 16,
                                  "src": "3366:48:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 348,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "3357:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                "typeString": "function (bool) pure"
                              }
                            },
                            "id": 355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3357:58:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 356,
                          "nodeType": "ExpressionStatement",
                          "src": "3357:58:0"
                        },
                        {
                          "assignments": [
                            358
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 358,
                              "mutability": "mutable",
                              "name": "vr",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 386,
                              "src": "3429:21:0",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VitalRecord_$19_memory_ptr",
                                "typeString": "struct Licenses.VitalRecord"
                              },
                              "typeName": {
                                "contractScope": null,
                                "id": 357,
                                "name": "VitalRecord",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 19,
                                "src": "3429:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VitalRecord_$19_storage_ptr",
                                  "typeString": "struct Licenses.VitalRecord"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 359,
                          "initialValue": null,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3429:21:0"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 360,
                                "name": "vr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 358,
                                "src": "3465:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VitalRecord_$19_memory_ptr",
                                  "typeString": "struct Licenses.VitalRecord memory"
                                }
                              },
                              "id": 362,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "isValue",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16,
                              "src": "3465:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3478:4:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "3465:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 365,
                          "nodeType": "ExpressionStatement",
                          "src": "3465:17:0"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 366,
                                "name": "vr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 358,
                                "src": "3496:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VitalRecord_$19_memory_ptr",
                                  "typeString": "struct Licenses.VitalRecord memory"
                                }
                              },
                              "id": 368,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "certificateType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14,
                              "src": "3496:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CertificateType_$12",
                                "typeString": "enum Licenses.CertificateType"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 369,
                                "name": "CertificateType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "3517:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_CertificateType_$12_$",
                                  "typeString": "type(enum Licenses.CertificateType)"
                                }
                              },
                              "id": 370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "MARRIAGE",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3517:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CertificateType_$12",
                                "typeString": "enum Licenses.CertificateType"
                              }
                            },
                            "src": "3496:45:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CertificateType_$12",
                              "typeString": "enum Licenses.CertificateType"
                            }
                          },
                          "id": 372,
                          "nodeType": "ExpressionStatement",
                          "src": "3496:45:0"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 373,
                                "name": "vr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 358,
                                "src": "3555:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VitalRecord_$19_memory_ptr",
                                  "typeString": "struct Licenses.VitalRecord memory"
                                }
                              },
                              "id": 375,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "date",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18,
                              "src": "3555:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "id": 376,
                              "name": "date",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 285,
                              "src": "3565:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "3555:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "id": 378,
                          "nodeType": "ExpressionStatement",
                          "src": "3555:14:0"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 379,
                                  "name": "profiles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
                                  "src": "3583:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
                                    "typeString": "mapping(address => struct Licenses.Profile storage ref)"
                                  }
                                },
                                "id": 381,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 380,
                                  "name": "forCitizen",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 287,
                                  "src": "3592:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3583:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Profile_$34_storage",
                                  "typeString": "struct Licenses.Profile storage ref"
                                }
                              },
                              "id": 382,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "marriageCertificate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33,
                              "src": "3583:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VitalRecord_$19_storage",
                                "typeString": "struct Licenses.VitalRecord storage ref"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "id": 383,
                              "name": "vr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "3626:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VitalRecord_$19_memory_ptr",
                                "typeString": "struct Licenses.VitalRecord memory"
                              }
                            },
                            "src": "3583:45:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VitalRecord_$19_storage",
                              "typeString": "struct Licenses.VitalRecord storage ref"
                            }
                          },
                          "id": 385,
                          "nodeType": "ExpressionStatement",
                          "src": "3583:45:0"
                        }
                      ]
                    }
                  },
                  "id": 388,
                  "nodeType": "IfStatement",
                  "src": "2923:716:0",
                  "trueBody": {
                    "id": 341,
                    "nodeType": "Block",
                    "src": "2981:287:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "3003:46:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 304,
                                      "name": "profiles",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 38,
                                      "src": "3004:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
                                        "typeString": "mapping(address => struct Licenses.Profile storage ref)"
                                      }
                                    },
                                    "id": 306,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 305,
                                      "name": "forCitizen",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 287,
                                      "src": "3013:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3004:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Profile_$34_storage",
                                      "typeString": "struct Licenses.Profile storage ref"
                                    }
                                  },
                                  "id": 307,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "birthCertificate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 31,
                                  "src": "3004:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VitalRecord_$19_storage",
                                    "typeString": "struct Licenses.VitalRecord storage ref"
                                  }
                                },
                                "id": 308,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isValue",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16,
                                "src": "3004:45:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 303,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2995:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2995:55:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 311,
                        "nodeType": "ExpressionStatement",
                        "src": "2995:55:0"
                      },
                      {
                        "assignments": [
                          313
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 313,
                            "mutability": "mutable",
                            "name": "vr",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 341,
                            "src": "3064:21:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VitalRecord_$19_memory_ptr",
                              "typeString": "struct Licenses.VitalRecord"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 312,
                              "name": "VitalRecord",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 19,
                              "src": "3064:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VitalRecord_$19_storage_ptr",
                                "typeString": "struct Licenses.VitalRecord"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 314,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3064:21:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 315,
                              "name": "vr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 313,
                              "src": "3100:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VitalRecord_$19_memory_ptr",
                                "typeString": "struct Licenses.VitalRecord memory"
                              }
                            },
                            "id": 317,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "isValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "3100:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3113:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3100:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 320,
                        "nodeType": "ExpressionStatement",
                        "src": "3100:17:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 321,
                              "name": "vr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 313,
                              "src": "3131:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VitalRecord_$19_memory_ptr",
                                "typeString": "struct Licenses.VitalRecord memory"
                              }
                            },
                            "id": 323,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "certificateType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14,
                            "src": "3131:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CertificateType_$12",
                              "typeString": "enum Licenses.CertificateType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 324,
                              "name": "CertificateType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "3152:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CertificateType_$12_$",
                                "typeString": "type(enum Licenses.CertificateType)"
                              }
                            },
                            "id": 325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "BIRTH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3152:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CertificateType_$12",
                              "typeString": "enum Licenses.CertificateType"
                            }
                          },
                          "src": "3131:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CertificateType_$12",
                            "typeString": "enum Licenses.CertificateType"
                          }
                        },
                        "id": 327,
                        "nodeType": "ExpressionStatement",
                        "src": "3131:42:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 328,
                              "name": "vr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 313,
                              "src": "3187:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VitalRecord_$19_memory_ptr",
                                "typeString": "struct Licenses.VitalRecord memory"
                              }
                            },
                            "id": 330,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "date",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "3187:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 331,
                            "name": "date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 285,
                            "src": "3197:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "3187:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 333,
                        "nodeType": "ExpressionStatement",
                        "src": "3187:14:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 334,
                                "name": "profiles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "3215:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$34_storage_$",
                                  "typeString": "mapping(address => struct Licenses.Profile storage ref)"
                                }
                              },
                              "id": 336,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 335,
                                "name": "forCitizen",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 287,
                                "src": "3224:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3215:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Profile_$34_storage",
                                "typeString": "struct Licenses.Profile storage ref"
                              }
                            },
                            "id": 337,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "birthCertificate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31,
                            "src": "3215:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VitalRecord_$19_storage",
                              "typeString": "struct Licenses.VitalRecord storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 338,
                            "name": "vr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "3255:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VitalRecord_$19_memory_ptr",
                              "typeString": "struct Licenses.VitalRecord memory"
                            }
                          },
                          "src": "3215:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VitalRecord_$19_storage",
                            "typeString": "struct Licenses.VitalRecord storage ref"
                          }
                        },
                        "id": 340,
                        "nodeType": "ExpressionStatement",
                        "src": "3215:42:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "24373d95",
            "id": 390,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "saveVitalRecord",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "recordType",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 390,
                  "src": "2778:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2778:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 285,
                  "mutability": "mutable",
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 390,
                  "src": "2804:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2804:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 287,
                  "mutability": "mutable",
                  "name": "forCitizen",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 390,
                  "src": "2826:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2826:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2768:82:0"
            },
            "returnParameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2866:0:0"
            },
            "scope": 391,
            "src": "2744:901:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 392,
        "src": "100:3547:0"
      }
    ],
    "src": "32:3615:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/Licenses.sol",
      "exportedSymbols": {
        "Licenses": [
          391
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.6",
            ".0",
            "<",
            "8.10",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "65:33:0"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            391
          ],
          "name": "Licenses",
          "scope": 392
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "Licenses.License",
              "name": "License",
              "scope": 391,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "expirationDate",
                  "overrides": null,
                  "scope": 9,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 3,
                    "name": "ElementaryTypeName",
                    "src": "149:4:0"
                  }
                ],
                "id": 4,
                "name": "VariableDeclaration",
                "src": "149:19:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "correctiveLensesRestriction",
                  "overrides": null,
                  "scope": 9,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 5,
                    "name": "ElementaryTypeName",
                    "src": "178:4:0"
                  }
                ],
                "id": 6,
                "name": "VariableDeclaration",
                "src": "178:32:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "realId",
                  "overrides": null,
                  "scope": 9,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7,
                    "name": "ElementaryTypeName",
                    "src": "220:4:0"
                  }
                ],
                "id": 8,
                "name": "VariableDeclaration",
                "src": "220:11:0"
              }
            ],
            "id": 9,
            "name": "StructDefinition",
            "src": "124:114:0"
          },
          {
            "attributes": {
              "canonicalName": "Licenses.CertificateType",
              "name": "CertificateType"
            },
            "children": [
              {
                "attributes": {
                  "name": "BIRTH"
                },
                "id": 10,
                "name": "EnumValue",
                "src": "266:5:0"
              },
              {
                "attributes": {
                  "name": "MARRIAGE"
                },
                "id": 11,
                "name": "EnumValue",
                "src": "273:8:0"
              }
            ],
            "id": 12,
            "name": "EnumDefinition",
            "src": "244:38:0"
          },
          {
            "attributes": {
              "canonicalName": "Licenses.VitalRecord",
              "name": "VitalRecord",
              "scope": 391,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "certificateType",
                  "overrides": null,
                  "scope": 19,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum Licenses.CertificateType",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "CertificateType",
                      "referencedDeclaration": 12,
                      "type": "enum Licenses.CertificateType"
                    },
                    "id": 13,
                    "name": "UserDefinedTypeName",
                    "src": "317:15:0"
                  }
                ],
                "id": 14,
                "name": "VariableDeclaration",
                "src": "317:31:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "isValue",
                  "overrides": null,
                  "scope": 19,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 15,
                    "name": "ElementaryTypeName",
                    "src": "358:4:0"
                  }
                ],
                "id": 16,
                "name": "VariableDeclaration",
                "src": "358:12:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "date",
                  "overrides": null,
                  "scope": 19,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint128",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint128",
                      "type": "uint128"
                    },
                    "id": 17,
                    "name": "ElementaryTypeName",
                    "src": "380:7:0"
                  }
                ],
                "id": 18,
                "name": "VariableDeclaration",
                "src": "380:12:0"
              }
            ],
            "id": 19,
            "name": "StructDefinition",
            "src": "288:111:0"
          },
          {
            "attributes": {
              "canonicalName": "Licenses.Profile",
              "name": "Profile",
              "scope": 391,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "isValue",
                  "overrides": null,
                  "scope": 34,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 20,
                    "name": "ElementaryTypeName",
                    "src": "430:4:0"
                  }
                ],
                "id": 21,
                "name": "VariableDeclaration",
                "src": "430:12:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "firstName",
                  "overrides": null,
                  "scope": 34,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bytes",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes",
                      "type": "bytes"
                    },
                    "id": 22,
                    "name": "ElementaryTypeName",
                    "src": "452:5:0"
                  }
                ],
                "id": 23,
                "name": "VariableDeclaration",
                "src": "452:15:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "lastName",
                  "overrides": null,
                  "scope": 34,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bytes",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes",
                      "type": "bytes"
                    },
                    "id": 24,
                    "name": "ElementaryTypeName",
                    "src": "477:5:0"
                  }
                ],
                "id": 25,
                "name": "VariableDeclaration",
                "src": "477:14:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "streetAddress",
                  "overrides": null,
                  "scope": 34,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bytes",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes",
                      "type": "bytes"
                    },
                    "id": 26,
                    "name": "ElementaryTypeName",
                    "src": "501:5:0"
                  }
                ],
                "id": 27,
                "name": "VariableDeclaration",
                "src": "501:19:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "license",
                  "overrides": null,
                  "scope": 34,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "struct Licenses.License",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "License",
                      "referencedDeclaration": 9,
                      "type": "struct Licenses.License"
                    },
                    "id": 28,
                    "name": "UserDefinedTypeName",
                    "src": "530:7:0"
                  }
                ],
                "id": 29,
                "name": "VariableDeclaration",
                "src": "530:15:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "birthCertificate",
                  "overrides": null,
                  "scope": 34,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "struct Licenses.VitalRecord",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "VitalRecord",
                      "referencedDeclaration": 19,
                      "type": "struct Licenses.VitalRecord"
                    },
                    "id": 30,
                    "name": "UserDefinedTypeName",
                    "src": "555:11:0"
                  }
                ],
                "id": 31,
                "name": "VariableDeclaration",
                "src": "555:28:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "marriageCertificate",
                  "overrides": null,
                  "scope": 34,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "struct Licenses.VitalRecord",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "VitalRecord",
                      "referencedDeclaration": 19,
                      "type": "struct Licenses.VitalRecord"
                    },
                    "id": 32,
                    "name": "UserDefinedTypeName",
                    "src": "593:11:0"
                  }
                ],
                "id": 33,
                "name": "VariableDeclaration",
                "src": "593:31:0"
              }
            ],
            "id": 34,
            "name": "StructDefinition",
            "src": "405:226:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "profiles",
              "overrides": null,
              "scope": 391,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct Licenses.Profile)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct Licenses.Profile)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 35,
                    "name": "ElementaryTypeName",
                    "src": "645:7:0"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Profile",
                      "referencedDeclaration": 34,
                      "type": "struct Licenses.Profile"
                    },
                    "id": 36,
                    "name": "UserDefinedTypeName",
                    "src": "656:7:0"
                  }
                ],
                "id": 37,
                "name": "Mapping",
                "src": "637:27:0"
              }
            ],
            "id": 38,
            "name": "VariableDeclaration",
            "src": "637:36:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "40129a40",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "newLicense",
              "overrides": null,
              "scope": 391,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "correctiveLensesRestriction",
                      "overrides": null,
                      "scope": 97,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 39,
                        "name": "ElementaryTypeName",
                        "src": "700:4:0"
                      }
                    ],
                    "id": 40,
                    "name": "VariableDeclaration",
                    "src": "700:32:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "realId",
                      "overrides": null,
                      "scope": 97,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 41,
                        "name": "ElementaryTypeName",
                        "src": "734:4:0"
                      }
                    ],
                    "id": 42,
                    "name": "VariableDeclaration",
                    "src": "734:11:0"
                  }
                ],
                "id": 43,
                "name": "ParameterList",
                "src": "699:47:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 44,
                "name": "ParameterList",
                "src": "762:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 45,
                            "name": "Identifier",
                            "src": "772:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 46,
                                    "name": "Identifier",
                                    "src": "780:3:0"
                                  }
                                ],
                                "id": 47,
                                "name": "MemberAccess",
                                "src": "780:9:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "302e303135",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": "ether",
                                  "token": "number",
                                  "type": "int_const 15000000000000000",
                                  "value": "0.015"
                                },
                                "id": 48,
                                "name": "Literal",
                                "src": "793:11:0"
                              }
                            ],
                            "id": 49,
                            "name": "BinaryOperation",
                            "src": "780:24:0"
                          }
                        ],
                        "id": 50,
                        "name": "FunctionCall",
                        "src": "772:33:0"
                      }
                    ],
                    "id": 51,
                    "name": "ExpressionStatement",
                    "src": "772:33:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_19e3f6ca68d1a7e671a5b39fbdf4bc9d928903bf736b31ebdd9944c32e2ebe7d",
                                  "typeString": "literal_string \"no profile for address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 52,
                            "name": "Identifier",
                            "src": "815:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "isValue",
                              "referencedDeclaration": 21,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Licenses.Profile storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 38,
                                      "type": "mapping(address => struct Licenses.Profile storage ref)",
                                      "value": "profiles"
                                    },
                                    "id": 53,
                                    "name": "Identifier",
                                    "src": "823:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 54,
                                        "name": "Identifier",
                                        "src": "832:3:0"
                                      }
                                    ],
                                    "id": 55,
                                    "name": "MemberAccess",
                                    "src": "832:10:0"
                                  }
                                ],
                                "id": 56,
                                "name": "IndexAccess",
                                "src": "823:20:0"
                              }
                            ],
                            "id": 57,
                            "name": "MemberAccess",
                            "src": "823:28:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "6e6f2070726f66696c6520666f722061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"no profile for address\"",
                              "value": "no profile for address"
                            },
                            "id": 58,
                            "name": "Literal",
                            "src": "853:24:0"
                          }
                        ],
                        "id": 59,
                        "name": "FunctionCall",
                        "src": "815:63:0"
                      }
                    ],
                    "id": 60,
                    "name": "ExpressionStatement",
                    "src": "815:63:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        62
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "l",
                          "overrides": null,
                          "scope": 96,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct Licenses.License",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "License",
                              "referencedDeclaration": 9,
                              "type": "struct Licenses.License"
                            },
                            "id": 61,
                            "name": "UserDefinedTypeName",
                            "src": "889:7:0"
                          }
                        ],
                        "id": 62,
                        "name": "VariableDeclaration",
                        "src": "889:16:0"
                      }
                    ],
                    "id": 63,
                    "name": "VariableDeclarationStatement",
                    "src": "889:16:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "expirationDate",
                              "referencedDeclaration": 4,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 62,
                                  "type": "struct Licenses.License memory",
                                  "value": "l"
                                },
                                "id": 64,
                                "name": "Identifier",
                                "src": "916:1:0"
                              }
                            ],
                            "id": 66,
                            "name": "MemberAccess",
                            "src": "916:16:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -4,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 67,
                                    "name": "Identifier",
                                    "src": "935:5:0"
                                  }
                                ],
                                "id": 68,
                                "name": "MemberAccess",
                                "src": "935:15:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "int_const 315360000"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_rational_315360000_by_1",
                                        "typeString": "int_const 315360000"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "operator": "*",
                                      "type": "int_const 315360000"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "3130",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 10",
                                          "value": "10"
                                        },
                                        "id": 69,
                                        "name": "Literal",
                                        "src": "954:2:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "333635",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": "days",
                                          "token": "number",
                                          "type": "int_const 31536000",
                                          "value": "365"
                                        },
                                        "id": 70,
                                        "name": "Literal",
                                        "src": "959:8:0"
                                      }
                                    ],
                                    "id": 71,
                                    "name": "BinaryOperation",
                                    "src": "954:13:0"
                                  }
                                ],
                                "id": 72,
                                "name": "TupleExpression",
                                "src": "953:15:0"
                              }
                            ],
                            "id": 73,
                            "name": "BinaryOperation",
                            "src": "935:33:0"
                          }
                        ],
                        "id": 74,
                        "name": "Assignment",
                        "src": "916:52:0"
                      }
                    ],
                    "id": 75,
                    "name": "ExpressionStatement",
                    "src": "916:52:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "correctiveLensesRestriction",
                              "referencedDeclaration": 6,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 62,
                                  "type": "struct Licenses.License memory",
                                  "value": "l"
                                },
                                "id": 76,
                                "name": "Identifier",
                                "src": "978:1:0"
                              }
                            ],
                            "id": 78,
                            "name": "MemberAccess",
                            "src": "978:29:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 40,
                              "type": "bool",
                              "value": "correctiveLensesRestriction"
                            },
                            "id": 79,
                            "name": "Identifier",
                            "src": "1010:27:0"
                          }
                        ],
                        "id": 80,
                        "name": "Assignment",
                        "src": "978:59:0"
                      }
                    ],
                    "id": 81,
                    "name": "ExpressionStatement",
                    "src": "978:59:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "realId",
                              "referencedDeclaration": 8,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 62,
                                  "type": "struct Licenses.License memory",
                                  "value": "l"
                                },
                                "id": 82,
                                "name": "Identifier",
                                "src": "1047:1:0"
                              }
                            ],
                            "id": 84,
                            "name": "MemberAccess",
                            "src": "1047:8:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 42,
                              "type": "bool",
                              "value": "realId"
                            },
                            "id": 85,
                            "name": "Identifier",
                            "src": "1058:6:0"
                          }
                        ],
                        "id": 86,
                        "name": "Assignment",
                        "src": "1047:17:0"
                      }
                    ],
                    "id": 87,
                    "name": "ExpressionStatement",
                    "src": "1047:17:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct Licenses.License storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "license",
                              "referencedDeclaration": 29,
                              "type": "struct Licenses.License storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Licenses.Profile storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 38,
                                      "type": "mapping(address => struct Licenses.Profile storage ref)",
                                      "value": "profiles"
                                    },
                                    "id": 88,
                                    "name": "Identifier",
                                    "src": "1075:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 89,
                                        "name": "Identifier",
                                        "src": "1084:3:0"
                                      }
                                    ],
                                    "id": 90,
                                    "name": "MemberAccess",
                                    "src": "1084:10:0"
                                  }
                                ],
                                "id": 91,
                                "name": "IndexAccess",
                                "src": "1075:20:0"
                              }
                            ],
                            "id": 92,
                            "name": "MemberAccess",
                            "src": "1075:28:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 62,
                              "type": "struct Licenses.License memory",
                              "value": "l"
                            },
                            "id": 93,
                            "name": "Identifier",
                            "src": "1106:1:0"
                          }
                        ],
                        "id": 94,
                        "name": "Assignment",
                        "src": "1075:32:0"
                      }
                    ],
                    "id": 95,
                    "name": "ExpressionStatement",
                    "src": "1075:32:0"
                  }
                ],
                "id": 96,
                "name": "Block",
                "src": "762:352:0"
              }
            ],
            "id": 97,
            "name": "FunctionDefinition",
            "src": "680:434:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "41e517d6",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "renewLicense",
              "overrides": null,
              "scope": 391,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "correctiveLensesRestriction",
                      "overrides": null,
                      "scope": 163,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 98,
                        "name": "ElementaryTypeName",
                        "src": "1142:4:0"
                      }
                    ],
                    "id": 99,
                    "name": "VariableDeclaration",
                    "src": "1142:32:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "realId",
                      "overrides": null,
                      "scope": 163,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 100,
                        "name": "ElementaryTypeName",
                        "src": "1176:4:0"
                      }
                    ],
                    "id": 101,
                    "name": "VariableDeclaration",
                    "src": "1176:11:0"
                  }
                ],
                "id": 102,
                "name": "ParameterList",
                "src": "1141:47:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 103,
                "name": "ParameterList",
                "src": "1204:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 101,
                          "type": "bool",
                          "value": "realId"
                        },
                        "id": 104,
                        "name": "Identifier",
                        "src": "1218:6:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 105,
                                "name": "Identifier",
                                "src": "1238:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "value",
                                      "referencedDeclaration": null,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 106,
                                        "name": "Identifier",
                                        "src": "1246:3:0"
                                      }
                                    ],
                                    "id": 107,
                                    "name": "MemberAccess",
                                    "src": "1246:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "302e3032",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": "ether",
                                      "token": "number",
                                      "type": "int_const 20000000000000000",
                                      "value": "0.02"
                                    },
                                    "id": 108,
                                    "name": "Literal",
                                    "src": "1259:10:0"
                                  }
                                ],
                                "id": 109,
                                "name": "BinaryOperation",
                                "src": "1246:23:0"
                              }
                            ],
                            "id": 110,
                            "name": "FunctionCall",
                            "src": "1238:32:0"
                          }
                        ],
                        "id": 111,
                        "name": "ExpressionStatement",
                        "src": "1238:32:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "type": "function (bool) pure",
                                  "value": "require"
                                },
                                "id": 112,
                                "name": "Identifier",
                                "src": "1298:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "value",
                                      "referencedDeclaration": null,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 113,
                                        "name": "Identifier",
                                        "src": "1306:3:0"
                                      }
                                    ],
                                    "id": 114,
                                    "name": "MemberAccess",
                                    "src": "1306:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "302e303135",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": "ether",
                                      "token": "number",
                                      "type": "int_const 15000000000000000",
                                      "value": "0.015"
                                    },
                                    "id": 115,
                                    "name": "Literal",
                                    "src": "1319:11:0"
                                  }
                                ],
                                "id": 116,
                                "name": "BinaryOperation",
                                "src": "1306:24:0"
                              }
                            ],
                            "id": 117,
                            "name": "FunctionCall",
                            "src": "1298:33:0"
                          }
                        ],
                        "id": 118,
                        "name": "ExpressionStatement",
                        "src": "1298:33:0"
                      }
                    ],
                    "id": 119,
                    "name": "IfStatement",
                    "src": "1214:117:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_19e3f6ca68d1a7e671a5b39fbdf4bc9d928903bf736b31ebdd9944c32e2ebe7d",
                                  "typeString": "literal_string \"no profile for address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 120,
                            "name": "Identifier",
                            "src": "1342:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "isValue",
                              "referencedDeclaration": 21,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Licenses.Profile storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 38,
                                      "type": "mapping(address => struct Licenses.Profile storage ref)",
                                      "value": "profiles"
                                    },
                                    "id": 121,
                                    "name": "Identifier",
                                    "src": "1350:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 122,
                                        "name": "Identifier",
                                        "src": "1359:3:0"
                                      }
                                    ],
                                    "id": 123,
                                    "name": "MemberAccess",
                                    "src": "1359:10:0"
                                  }
                                ],
                                "id": 124,
                                "name": "IndexAccess",
                                "src": "1350:20:0"
                              }
                            ],
                            "id": 125,
                            "name": "MemberAccess",
                            "src": "1350:28:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "6e6f2070726f66696c6520666f722061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"no profile for address\"",
                              "value": "no profile for address"
                            },
                            "id": 126,
                            "name": "Literal",
                            "src": "1380:24:0"
                          }
                        ],
                        "id": 127,
                        "name": "FunctionCall",
                        "src": "1342:63:0"
                      }
                    ],
                    "id": 128,
                    "name": "ExpressionStatement",
                    "src": "1342:63:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "expirationDate",
                              "referencedDeclaration": 4,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "license",
                                  "referencedDeclaration": 29,
                                  "type": "struct Licenses.License storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Licenses.Profile storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 38,
                                          "type": "mapping(address => struct Licenses.Profile storage ref)",
                                          "value": "profiles"
                                        },
                                        "id": 129,
                                        "name": "Identifier",
                                        "src": "1416:8:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": -15,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 130,
                                            "name": "Identifier",
                                            "src": "1425:3:0"
                                          }
                                        ],
                                        "id": 131,
                                        "name": "MemberAccess",
                                        "src": "1425:10:0"
                                      }
                                    ],
                                    "id": 132,
                                    "name": "IndexAccess",
                                    "src": "1416:20:0"
                                  }
                                ],
                                "id": 133,
                                "name": "MemberAccess",
                                "src": "1416:28:0"
                              }
                            ],
                            "id": 134,
                            "name": "MemberAccess",
                            "src": "1416:43:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -4,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 135,
                                    "name": "Identifier",
                                    "src": "1462:5:0"
                                  }
                                ],
                                "id": 136,
                                "name": "MemberAccess",
                                "src": "1462:15:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "int_const 315360000"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_rational_315360000_by_1",
                                        "typeString": "int_const 315360000"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "operator": "*",
                                      "type": "int_const 315360000"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "3130",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 10",
                                          "value": "10"
                                        },
                                        "id": 137,
                                        "name": "Literal",
                                        "src": "1481:2:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "333635",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": "days",
                                          "token": "number",
                                          "type": "int_const 31536000",
                                          "value": "365"
                                        },
                                        "id": 138,
                                        "name": "Literal",
                                        "src": "1486:8:0"
                                      }
                                    ],
                                    "id": 139,
                                    "name": "BinaryOperation",
                                    "src": "1481:13:0"
                                  }
                                ],
                                "id": 140,
                                "name": "TupleExpression",
                                "src": "1480:15:0"
                              }
                            ],
                            "id": 141,
                            "name": "BinaryOperation",
                            "src": "1462:33:0"
                          }
                        ],
                        "id": 142,
                        "name": "Assignment",
                        "src": "1416:79:0"
                      }
                    ],
                    "id": 143,
                    "name": "ExpressionStatement",
                    "src": "1416:79:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "realId",
                              "referencedDeclaration": 8,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "license",
                                  "referencedDeclaration": 29,
                                  "type": "struct Licenses.License storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Licenses.Profile storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 38,
                                          "type": "mapping(address => struct Licenses.Profile storage ref)",
                                          "value": "profiles"
                                        },
                                        "id": 144,
                                        "name": "Identifier",
                                        "src": "1505:8:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": -15,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 145,
                                            "name": "Identifier",
                                            "src": "1514:3:0"
                                          }
                                        ],
                                        "id": 146,
                                        "name": "MemberAccess",
                                        "src": "1514:10:0"
                                      }
                                    ],
                                    "id": 147,
                                    "name": "IndexAccess",
                                    "src": "1505:20:0"
                                  }
                                ],
                                "id": 148,
                                "name": "MemberAccess",
                                "src": "1505:28:0"
                              }
                            ],
                            "id": 149,
                            "name": "MemberAccess",
                            "src": "1505:35:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 101,
                              "type": "bool",
                              "value": "realId"
                            },
                            "id": 150,
                            "name": "Identifier",
                            "src": "1543:6:0"
                          }
                        ],
                        "id": 151,
                        "name": "Assignment",
                        "src": "1505:44:0"
                      }
                    ],
                    "id": 152,
                    "name": "ExpressionStatement",
                    "src": "1505:44:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "correctiveLensesRestriction",
                              "referencedDeclaration": 6,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "license",
                                  "referencedDeclaration": 29,
                                  "type": "struct Licenses.License storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Licenses.Profile storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 38,
                                          "type": "mapping(address => struct Licenses.Profile storage ref)",
                                          "value": "profiles"
                                        },
                                        "id": 153,
                                        "name": "Identifier",
                                        "src": "1559:8:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": -15,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 154,
                                            "name": "Identifier",
                                            "src": "1568:3:0"
                                          }
                                        ],
                                        "id": 155,
                                        "name": "MemberAccess",
                                        "src": "1568:10:0"
                                      }
                                    ],
                                    "id": 156,
                                    "name": "IndexAccess",
                                    "src": "1559:20:0"
                                  }
                                ],
                                "id": 157,
                                "name": "MemberAccess",
                                "src": "1559:28:0"
                              }
                            ],
                            "id": 158,
                            "name": "MemberAccess",
                            "src": "1559:56:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 99,
                              "type": "bool",
                              "value": "correctiveLensesRestriction"
                            },
                            "id": 159,
                            "name": "Identifier",
                            "src": "1618:27:0"
                          }
                        ],
                        "id": 160,
                        "name": "Assignment",
                        "src": "1559:86:0"
                      }
                    ],
                    "id": 161,
                    "name": "ExpressionStatement",
                    "src": "1559:86:0"
                  }
                ],
                "id": 162,
                "name": "Block",
                "src": "1204:448:0"
              }
            ],
            "id": 163,
            "name": "FunctionDefinition",
            "src": "1120:532:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "2f54ced5",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "updateAddress",
              "overrides": null,
              "scope": 391,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "newStreetAddress",
                      "overrides": null,
                      "scope": 177,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 164,
                        "name": "ElementaryTypeName",
                        "src": "1681:5:0"
                      }
                    ],
                    "id": 165,
                    "name": "VariableDeclaration",
                    "src": "1681:29:0"
                  }
                ],
                "id": 166,
                "name": "ParameterList",
                "src": "1680:31:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 167,
                "name": "ParameterList",
                "src": "1727:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bytes storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "streetAddress",
                              "referencedDeclaration": 27,
                              "type": "bytes storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Licenses.Profile storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 38,
                                      "type": "mapping(address => struct Licenses.Profile storage ref)",
                                      "value": "profiles"
                                    },
                                    "id": 168,
                                    "name": "Identifier",
                                    "src": "1737:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 169,
                                        "name": "Identifier",
                                        "src": "1746:3:0"
                                      }
                                    ],
                                    "id": 170,
                                    "name": "MemberAccess",
                                    "src": "1746:10:0"
                                  }
                                ],
                                "id": 171,
                                "name": "IndexAccess",
                                "src": "1737:20:0"
                              }
                            ],
                            "id": 172,
                            "name": "MemberAccess",
                            "src": "1737:34:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 165,
                              "type": "bytes memory",
                              "value": "newStreetAddress"
                            },
                            "id": 173,
                            "name": "Identifier",
                            "src": "1774:16:0"
                          }
                        ],
                        "id": 174,
                        "name": "Assignment",
                        "src": "1737:53:0"
                      }
                    ],
                    "id": 175,
                    "name": "ExpressionStatement",
                    "src": "1737:53:0"
                  }
                ],
                "id": 176,
                "name": "Block",
                "src": "1727:70:0"
              }
            ],
            "id": 177,
            "name": "FunctionDefinition",
            "src": "1658:139:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "c5e4dd82",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getLicense",
              "overrides": null,
              "scope": 391,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 178,
                "name": "ParameterList",
                "src": "1822:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 189,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Licenses.License",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "License",
                          "referencedDeclaration": 9,
                          "type": "struct Licenses.License"
                        },
                        "id": 179,
                        "name": "UserDefinedTypeName",
                        "src": "1846:7:0"
                      }
                    ],
                    "id": 180,
                    "name": "VariableDeclaration",
                    "src": "1846:14:0"
                  }
                ],
                "id": 181,
                "name": "ParameterList",
                "src": "1845:16:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 181
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "license",
                          "referencedDeclaration": 29,
                          "type": "struct Licenses.License storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct Licenses.Profile storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 38,
                                  "type": "mapping(address => struct Licenses.Profile storage ref)",
                                  "value": "profiles"
                                },
                                "id": 182,
                                "name": "Identifier",
                                "src": "1879:8:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 183,
                                    "name": "Identifier",
                                    "src": "1888:3:0"
                                  }
                                ],
                                "id": 184,
                                "name": "MemberAccess",
                                "src": "1888:10:0"
                              }
                            ],
                            "id": 185,
                            "name": "IndexAccess",
                            "src": "1879:20:0"
                          }
                        ],
                        "id": 186,
                        "name": "MemberAccess",
                        "src": "1879:28:0"
                      }
                    ],
                    "id": 187,
                    "name": "Return",
                    "src": "1872:35:0"
                  }
                ],
                "id": 188,
                "name": "Block",
                "src": "1862:52:0"
              }
            ],
            "id": 189,
            "name": "FunctionDefinition",
            "src": "1803:111:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "52af9c4b",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVitalRecord",
              "overrides": null,
              "scope": 391,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "recordType",
                      "overrides": null,
                      "scope": 228,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 190,
                        "name": "ElementaryTypeName",
                        "src": "1944:5:0"
                      }
                    ],
                    "id": 191,
                    "name": "VariableDeclaration",
                    "src": "1944:16:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "forCitizen",
                      "overrides": null,
                      "scope": 228,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 192,
                        "name": "ElementaryTypeName",
                        "src": "1962:7:0"
                      }
                    ],
                    "id": 193,
                    "name": "VariableDeclaration",
                    "src": "1962:18:0"
                  }
                ],
                "id": 194,
                "name": "ParameterList",
                "src": "1943:38:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 228,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Licenses.VitalRecord",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "VitalRecord",
                          "referencedDeclaration": 19,
                          "type": "struct Licenses.VitalRecord"
                        },
                        "id": 195,
                        "name": "UserDefinedTypeName",
                        "src": "2003:11:0"
                      }
                    ],
                    "id": 196,
                    "name": "VariableDeclaration",
                    "src": "2003:18:0"
                  }
                ],
                "id": 197,
                "name": "ParameterList",
                "src": "2002:20:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 198,
                            "name": "Identifier",
                            "src": "2033:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 191,
                                  "type": "uint8",
                                  "value": "recordType"
                                },
                                "id": 199,
                                "name": "Identifier",
                                "src": "2041:10:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint8",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_enum$_CertificateType_$12",
                                          "typeString": "enum Licenses.CertificateType"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(uint8)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "uint8",
                                          "type": null
                                        },
                                        "id": 200,
                                        "name": "ElementaryTypeName",
                                        "src": "2055:5:0"
                                      }
                                    ],
                                    "id": 201,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "2055:5:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "member_name": "MARRIAGE",
                                      "referencedDeclaration": null,
                                      "type": "enum Licenses.CertificateType"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 12,
                                          "type": "type(enum Licenses.CertificateType)",
                                          "value": "CertificateType"
                                        },
                                        "id": 202,
                                        "name": "Identifier",
                                        "src": "2061:15:0"
                                      }
                                    ],
                                    "id": 203,
                                    "name": "MemberAccess",
                                    "src": "2061:24:0"
                                  }
                                ],
                                "id": 204,
                                "name": "FunctionCall",
                                "src": "2055:31:0"
                              }
                            ],
                            "id": 205,
                            "name": "BinaryOperation",
                            "src": "2041:45:0"
                          }
                        ],
                        "id": 206,
                        "name": "FunctionCall",
                        "src": "2033:54:0"
                      }
                    ],
                    "id": 207,
                    "name": "ExpressionStatement",
                    "src": "2033:54:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_CertificateType_$12",
                            "typeString": "enum Licenses.CertificateType"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "enum Licenses.CertificateType",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12,
                                  "type": "type(enum Licenses.CertificateType)",
                                  "value": "CertificateType"
                                },
                                "id": 208,
                                "name": "Identifier",
                                "src": "2101:15:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 191,
                                  "type": "uint8",
                                  "value": "recordType"
                                },
                                "id": 209,
                                "name": "Identifier",
                                "src": "2117:10:0"
                              }
                            ],
                            "id": 210,
                            "name": "FunctionCall",
                            "src": "2101:27:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "BIRTH",
                              "referencedDeclaration": null,
                              "type": "enum Licenses.CertificateType"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12,
                                  "type": "type(enum Licenses.CertificateType)",
                                  "value": "CertificateType"
                                },
                                "id": 211,
                                "name": "Identifier",
                                "src": "2132:15:0"
                              }
                            ],
                            "id": 212,
                            "name": "MemberAccess",
                            "src": "2132:21:0"
                          }
                        ],
                        "id": 213,
                        "name": "BinaryOperation",
                        "src": "2101:52:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "functionReturnParameters": 197
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "birthCertificate",
                                  "referencedDeclaration": 31,
                                  "type": "struct Licenses.VitalRecord storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Licenses.Profile storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 38,
                                          "type": "mapping(address => struct Licenses.Profile storage ref)",
                                          "value": "profiles"
                                        },
                                        "id": 214,
                                        "name": "Identifier",
                                        "src": "2176:8:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 193,
                                          "type": "address",
                                          "value": "forCitizen"
                                        },
                                        "id": 215,
                                        "name": "Identifier",
                                        "src": "2185:10:0"
                                      }
                                    ],
                                    "id": 216,
                                    "name": "IndexAccess",
                                    "src": "2176:20:0"
                                  }
                                ],
                                "id": 217,
                                "name": "MemberAccess",
                                "src": "2176:37:0"
                              }
                            ],
                            "id": 218,
                            "name": "Return",
                            "src": "2169:44:0"
                          }
                        ],
                        "id": 219,
                        "name": "Block",
                        "src": "2155:69:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "functionReturnParameters": 197
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "marriageCertificate",
                                  "referencedDeclaration": 33,
                                  "type": "struct Licenses.VitalRecord storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Licenses.Profile storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 38,
                                          "type": "mapping(address => struct Licenses.Profile storage ref)",
                                          "value": "profiles"
                                        },
                                        "id": 220,
                                        "name": "Identifier",
                                        "src": "2259:8:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 193,
                                          "type": "address",
                                          "value": "forCitizen"
                                        },
                                        "id": 221,
                                        "name": "Identifier",
                                        "src": "2268:10:0"
                                      }
                                    ],
                                    "id": 222,
                                    "name": "IndexAccess",
                                    "src": "2259:20:0"
                                  }
                                ],
                                "id": 223,
                                "name": "MemberAccess",
                                "src": "2259:40:0"
                              }
                            ],
                            "id": 224,
                            "name": "Return",
                            "src": "2252:47:0"
                          }
                        ],
                        "id": 225,
                        "name": "Block",
                        "src": "2238:72:0"
                      }
                    ],
                    "id": 226,
                    "name": "IfStatement",
                    "src": "2097:213:0"
                  }
                ],
                "id": 227,
                "name": "Block",
                "src": "2023:293:0"
              }
            ],
            "id": 228,
            "name": "FunctionDefinition",
            "src": "1920:396:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "50cb34b8",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addProfile",
              "overrides": null,
              "scope": 391,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "firstName",
                      "overrides": null,
                      "scope": 281,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 229,
                        "name": "ElementaryTypeName",
                        "src": "2351:5:0"
                      }
                    ],
                    "id": 230,
                    "name": "VariableDeclaration",
                    "src": "2351:22:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "lastName",
                      "overrides": null,
                      "scope": 281,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 231,
                        "name": "ElementaryTypeName",
                        "src": "2383:5:0"
                      }
                    ],
                    "id": 232,
                    "name": "VariableDeclaration",
                    "src": "2383:21:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "streetAddress",
                      "overrides": null,
                      "scope": 281,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 233,
                        "name": "ElementaryTypeName",
                        "src": "2414:5:0"
                      }
                    ],
                    "id": 234,
                    "name": "VariableDeclaration",
                    "src": "2414:26:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "forCitizen",
                      "overrides": null,
                      "scope": 281,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 235,
                        "name": "ElementaryTypeName",
                        "src": "2450:7:0"
                      }
                    ],
                    "id": 236,
                    "name": "VariableDeclaration",
                    "src": "2450:18:0"
                  }
                ],
                "id": 237,
                "name": "ParameterList",
                "src": "2341:133:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 238,
                "name": "ParameterList",
                "src": "2490:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 239,
                            "name": "Identifier",
                            "src": "2500:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "isValue",
                                  "referencedDeclaration": 21,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Licenses.Profile storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 38,
                                          "type": "mapping(address => struct Licenses.Profile storage ref)",
                                          "value": "profiles"
                                        },
                                        "id": 240,
                                        "name": "Identifier",
                                        "src": "2509:8:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 236,
                                          "type": "address",
                                          "value": "forCitizen"
                                        },
                                        "id": 241,
                                        "name": "Identifier",
                                        "src": "2518:10:0"
                                      }
                                    ],
                                    "id": 242,
                                    "name": "IndexAccess",
                                    "src": "2509:20:0"
                                  }
                                ],
                                "id": 243,
                                "name": "MemberAccess",
                                "src": "2509:28:0"
                              }
                            ],
                            "id": 244,
                            "name": "UnaryOperation",
                            "src": "2508:29:0"
                          }
                        ],
                        "id": 245,
                        "name": "FunctionCall",
                        "src": "2500:38:0"
                      }
                    ],
                    "id": 246,
                    "name": "ExpressionStatement",
                    "src": "2500:38:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        248
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "p",
                          "overrides": null,
                          "scope": 280,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct Licenses.Profile",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Profile",
                              "referencedDeclaration": 34,
                              "type": "struct Licenses.Profile"
                            },
                            "id": 247,
                            "name": "UserDefinedTypeName",
                            "src": "2549:7:0"
                          }
                        ],
                        "id": 248,
                        "name": "VariableDeclaration",
                        "src": "2549:16:0"
                      }
                    ],
                    "id": 249,
                    "name": "VariableDeclarationStatement",
                    "src": "2549:16:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "isValue",
                              "referencedDeclaration": 21,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 248,
                                  "type": "struct Licenses.Profile memory",
                                  "value": "p"
                                },
                                "id": 250,
                                "name": "Identifier",
                                "src": "2576:1:0"
                              }
                            ],
                            "id": 252,
                            "name": "MemberAccess",
                            "src": "2576:9:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 253,
                            "name": "Literal",
                            "src": "2588:4:0"
                          }
                        ],
                        "id": 254,
                        "name": "Assignment",
                        "src": "2576:16:0"
                      }
                    ],
                    "id": 255,
                    "name": "ExpressionStatement",
                    "src": "2576:16:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bytes memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "firstName",
                              "referencedDeclaration": 23,
                              "type": "bytes memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 248,
                                  "type": "struct Licenses.Profile memory",
                                  "value": "p"
                                },
                                "id": 256,
                                "name": "Identifier",
                                "src": "2602:1:0"
                              }
                            ],
                            "id": 258,
                            "name": "MemberAccess",
                            "src": "2602:11:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 230,
                              "type": "bytes memory",
                              "value": "firstName"
                            },
                            "id": 259,
                            "name": "Identifier",
                            "src": "2616:9:0"
                          }
                        ],
                        "id": 260,
                        "name": "Assignment",
                        "src": "2602:23:0"
                      }
                    ],
                    "id": 261,
                    "name": "ExpressionStatement",
                    "src": "2602:23:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bytes memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "lastName",
                              "referencedDeclaration": 25,
                              "type": "bytes memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 248,
                                  "type": "struct Licenses.Profile memory",
                                  "value": "p"
                                },
                                "id": 262,
                                "name": "Identifier",
                                "src": "2635:1:0"
                              }
                            ],
                            "id": 264,
                            "name": "MemberAccess",
                            "src": "2635:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 232,
                              "type": "bytes memory",
                              "value": "lastName"
                            },
                            "id": 265,
                            "name": "Identifier",
                            "src": "2648:8:0"
                          }
                        ],
                        "id": 266,
                        "name": "Assignment",
                        "src": "2635:21:0"
                      }
                    ],
                    "id": 267,
                    "name": "ExpressionStatement",
                    "src": "2635:21:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bytes memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "streetAddress",
                              "referencedDeclaration": 27,
                              "type": "bytes memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 248,
                                  "type": "struct Licenses.Profile memory",
                                  "value": "p"
                                },
                                "id": 268,
                                "name": "Identifier",
                                "src": "2666:1:0"
                              }
                            ],
                            "id": 270,
                            "name": "MemberAccess",
                            "src": "2666:15:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 234,
                              "type": "bytes memory",
                              "value": "streetAddress"
                            },
                            "id": 271,
                            "name": "Identifier",
                            "src": "2684:13:0"
                          }
                        ],
                        "id": 272,
                        "name": "Assignment",
                        "src": "2666:31:0"
                      }
                    ],
                    "id": 273,
                    "name": "ExpressionStatement",
                    "src": "2666:31:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct Licenses.Profile storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct Licenses.Profile storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 38,
                                  "type": "mapping(address => struct Licenses.Profile storage ref)",
                                  "value": "profiles"
                                },
                                "id": 274,
                                "name": "Identifier",
                                "src": "2707:8:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 236,
                                  "type": "address",
                                  "value": "forCitizen"
                                },
                                "id": 275,
                                "name": "Identifier",
                                "src": "2716:10:0"
                              }
                            ],
                            "id": 276,
                            "name": "IndexAccess",
                            "src": "2707:20:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 248,
                              "type": "struct Licenses.Profile memory",
                              "value": "p"
                            },
                            "id": 277,
                            "name": "Identifier",
                            "src": "2730:1:0"
                          }
                        ],
                        "id": 278,
                        "name": "Assignment",
                        "src": "2707:24:0"
                      }
                    ],
                    "id": 279,
                    "name": "ExpressionStatement",
                    "src": "2707:24:0"
                  }
                ],
                "id": 280,
                "name": "Block",
                "src": "2490:248:0"
              }
            ],
            "id": 281,
            "name": "FunctionDefinition",
            "src": "2322:416:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "24373d95",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "saveVitalRecord",
              "overrides": null,
              "scope": 391,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "recordType",
                      "overrides": null,
                      "scope": 390,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 282,
                        "name": "ElementaryTypeName",
                        "src": "2778:5:0"
                      }
                    ],
                    "id": 283,
                    "name": "VariableDeclaration",
                    "src": "2778:16:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "date",
                      "overrides": null,
                      "scope": 390,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint128",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint128",
                          "type": "uint128"
                        },
                        "id": 284,
                        "name": "ElementaryTypeName",
                        "src": "2804:7:0"
                      }
                    ],
                    "id": 285,
                    "name": "VariableDeclaration",
                    "src": "2804:12:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "forCitizen",
                      "overrides": null,
                      "scope": 390,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 286,
                        "name": "ElementaryTypeName",
                        "src": "2826:7:0"
                      }
                    ],
                    "id": 287,
                    "name": "VariableDeclaration",
                    "src": "2826:18:0"
                  }
                ],
                "id": 288,
                "name": "ParameterList",
                "src": "2768:82:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 289,
                "name": "ParameterList",
                "src": "2866:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 290,
                            "name": "Identifier",
                            "src": "2876:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "isValue",
                              "referencedDeclaration": 21,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Licenses.Profile storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 38,
                                      "type": "mapping(address => struct Licenses.Profile storage ref)",
                                      "value": "profiles"
                                    },
                                    "id": 291,
                                    "name": "Identifier",
                                    "src": "2884:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 287,
                                      "type": "address",
                                      "value": "forCitizen"
                                    },
                                    "id": 292,
                                    "name": "Identifier",
                                    "src": "2893:10:0"
                                  }
                                ],
                                "id": 293,
                                "name": "IndexAccess",
                                "src": "2884:20:0"
                              }
                            ],
                            "id": 294,
                            "name": "MemberAccess",
                            "src": "2884:28:0"
                          }
                        ],
                        "id": 295,
                        "name": "FunctionCall",
                        "src": "2876:37:0"
                      }
                    ],
                    "id": 296,
                    "name": "ExpressionStatement",
                    "src": "2876:37:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_CertificateType_$12",
                            "typeString": "enum Licenses.CertificateType"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "enum Licenses.CertificateType",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12,
                                  "type": "type(enum Licenses.CertificateType)",
                                  "value": "CertificateType"
                                },
                                "id": 297,
                                "name": "Identifier",
                                "src": "2927:15:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 283,
                                  "type": "uint8",
                                  "value": "recordType"
                                },
                                "id": 298,
                                "name": "Identifier",
                                "src": "2943:10:0"
                              }
                            ],
                            "id": 299,
                            "name": "FunctionCall",
                            "src": "2927:27:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "BIRTH",
                              "referencedDeclaration": null,
                              "type": "enum Licenses.CertificateType"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12,
                                  "type": "type(enum Licenses.CertificateType)",
                                  "value": "CertificateType"
                                },
                                "id": 300,
                                "name": "Identifier",
                                "src": "2958:15:0"
                              }
                            ],
                            "id": 301,
                            "name": "MemberAccess",
                            "src": "2958:21:0"
                          }
                        ],
                        "id": 302,
                        "name": "BinaryOperation",
                        "src": "2927:52:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        -18,
                                        -18
                                      ],
                                      "referencedDeclaration": -18,
                                      "type": "function (bool) pure",
                                      "value": "require"
                                    },
                                    "id": 303,
                                    "name": "Identifier",
                                    "src": "2995:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "!",
                                      "prefix": true,
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "isValue",
                                          "referencedDeclaration": 16,
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "birthCertificate",
                                              "referencedDeclaration": 31,
                                              "type": "struct Licenses.VitalRecord storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct Licenses.Profile storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 38,
                                                      "type": "mapping(address => struct Licenses.Profile storage ref)",
                                                      "value": "profiles"
                                                    },
                                                    "id": 304,
                                                    "name": "Identifier",
                                                    "src": "3004:8:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 287,
                                                      "type": "address",
                                                      "value": "forCitizen"
                                                    },
                                                    "id": 305,
                                                    "name": "Identifier",
                                                    "src": "3013:10:0"
                                                  }
                                                ],
                                                "id": 306,
                                                "name": "IndexAccess",
                                                "src": "3004:20:0"
                                              }
                                            ],
                                            "id": 307,
                                            "name": "MemberAccess",
                                            "src": "3004:37:0"
                                          }
                                        ],
                                        "id": 308,
                                        "name": "MemberAccess",
                                        "src": "3004:45:0"
                                      }
                                    ],
                                    "id": 309,
                                    "name": "UnaryOperation",
                                    "src": "3003:46:0"
                                  }
                                ],
                                "id": 310,
                                "name": "FunctionCall",
                                "src": "2995:55:0"
                              }
                            ],
                            "id": 311,
                            "name": "ExpressionStatement",
                            "src": "2995:55:0"
                          },
                          {
                            "attributes": {
                              "assignments": [
                                313
                              ],
                              "initialValue": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "mutability": "mutable",
                                  "name": "vr",
                                  "overrides": null,
                                  "scope": 341,
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "type": "struct Licenses.VitalRecord",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "VitalRecord",
                                      "referencedDeclaration": 19,
                                      "type": "struct Licenses.VitalRecord"
                                    },
                                    "id": 312,
                                    "name": "UserDefinedTypeName",
                                    "src": "3064:11:0"
                                  }
                                ],
                                "id": 313,
                                "name": "VariableDeclaration",
                                "src": "3064:21:0"
                              }
                            ],
                            "id": 314,
                            "name": "VariableDeclarationStatement",
                            "src": "3064:21:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "isValue",
                                      "referencedDeclaration": 16,
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 313,
                                          "type": "struct Licenses.VitalRecord memory",
                                          "value": "vr"
                                        },
                                        "id": 315,
                                        "name": "Identifier",
                                        "src": "3100:2:0"
                                      }
                                    ],
                                    "id": 317,
                                    "name": "MemberAccess",
                                    "src": "3100:10:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "74727565",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "bool",
                                      "type": "bool",
                                      "value": "true"
                                    },
                                    "id": 318,
                                    "name": "Literal",
                                    "src": "3113:4:0"
                                  }
                                ],
                                "id": 319,
                                "name": "Assignment",
                                "src": "3100:17:0"
                              }
                            ],
                            "id": 320,
                            "name": "ExpressionStatement",
                            "src": "3100:17:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "enum Licenses.CertificateType"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "certificateType",
                                      "referencedDeclaration": 14,
                                      "type": "enum Licenses.CertificateType"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 313,
                                          "type": "struct Licenses.VitalRecord memory",
                                          "value": "vr"
                                        },
                                        "id": 321,
                                        "name": "Identifier",
                                        "src": "3131:2:0"
                                      }
                                    ],
                                    "id": 323,
                                    "name": "MemberAccess",
                                    "src": "3131:18:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "member_name": "BIRTH",
                                      "referencedDeclaration": null,
                                      "type": "enum Licenses.CertificateType"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 12,
                                          "type": "type(enum Licenses.CertificateType)",
                                          "value": "CertificateType"
                                        },
                                        "id": 324,
                                        "name": "Identifier",
                                        "src": "3152:15:0"
                                      }
                                    ],
                                    "id": 325,
                                    "name": "MemberAccess",
                                    "src": "3152:21:0"
                                  }
                                ],
                                "id": 326,
                                "name": "Assignment",
                                "src": "3131:42:0"
                              }
                            ],
                            "id": 327,
                            "name": "ExpressionStatement",
                            "src": "3131:42:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint128"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "date",
                                      "referencedDeclaration": 18,
                                      "type": "uint128"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 313,
                                          "type": "struct Licenses.VitalRecord memory",
                                          "value": "vr"
                                        },
                                        "id": 328,
                                        "name": "Identifier",
                                        "src": "3187:2:0"
                                      }
                                    ],
                                    "id": 330,
                                    "name": "MemberAccess",
                                    "src": "3187:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 285,
                                      "type": "uint128",
                                      "value": "date"
                                    },
                                    "id": 331,
                                    "name": "Identifier",
                                    "src": "3197:4:0"
                                  }
                                ],
                                "id": 332,
                                "name": "Assignment",
                                "src": "3187:14:0"
                              }
                            ],
                            "id": 333,
                            "name": "ExpressionStatement",
                            "src": "3187:14:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "struct Licenses.VitalRecord storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "birthCertificate",
                                      "referencedDeclaration": 31,
                                      "type": "struct Licenses.VitalRecord storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct Licenses.Profile storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 38,
                                              "type": "mapping(address => struct Licenses.Profile storage ref)",
                                              "value": "profiles"
                                            },
                                            "id": 334,
                                            "name": "Identifier",
                                            "src": "3215:8:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 287,
                                              "type": "address",
                                              "value": "forCitizen"
                                            },
                                            "id": 335,
                                            "name": "Identifier",
                                            "src": "3224:10:0"
                                          }
                                        ],
                                        "id": 336,
                                        "name": "IndexAccess",
                                        "src": "3215:20:0"
                                      }
                                    ],
                                    "id": 337,
                                    "name": "MemberAccess",
                                    "src": "3215:37:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 313,
                                      "type": "struct Licenses.VitalRecord memory",
                                      "value": "vr"
                                    },
                                    "id": 338,
                                    "name": "Identifier",
                                    "src": "3255:2:0"
                                  }
                                ],
                                "id": 339,
                                "name": "Assignment",
                                "src": "3215:42:0"
                              }
                            ],
                            "id": 340,
                            "name": "ExpressionStatement",
                            "src": "3215:42:0"
                          }
                        ],
                        "id": 341,
                        "name": "Block",
                        "src": "2981:287:0"
                      },
                      {
                        "attributes": {
                          "falseBody": null
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_enum$_CertificateType_$12",
                                "typeString": "enum Licenses.CertificateType"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "enum Licenses.CertificateType",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12,
                                      "type": "type(enum Licenses.CertificateType)",
                                      "value": "CertificateType"
                                    },
                                    "id": 342,
                                    "name": "Identifier",
                                    "src": "3286:15:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 283,
                                      "type": "uint8",
                                      "value": "recordType"
                                    },
                                    "id": 343,
                                    "name": "Identifier",
                                    "src": "3302:10:0"
                                  }
                                ],
                                "id": 344,
                                "name": "FunctionCall",
                                "src": "3286:27:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "MARRIAGE",
                                  "referencedDeclaration": null,
                                  "type": "enum Licenses.CertificateType"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12,
                                      "type": "type(enum Licenses.CertificateType)",
                                      "value": "CertificateType"
                                    },
                                    "id": 345,
                                    "name": "Identifier",
                                    "src": "3317:15:0"
                                  }
                                ],
                                "id": 346,
                                "name": "MemberAccess",
                                "src": "3317:24:0"
                              }
                            ],
                            "id": 347,
                            "name": "BinaryOperation",
                            "src": "3286:55:0"
                          },
                          {
                            "children": [
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "tuple()",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            -18,
                                            -18
                                          ],
                                          "referencedDeclaration": -18,
                                          "type": "function (bool) pure",
                                          "value": "require"
                                        },
                                        "id": 348,
                                        "name": "Identifier",
                                        "src": "3357:7:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "!",
                                          "prefix": true,
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "isValue",
                                              "referencedDeclaration": 16,
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "marriageCertificate",
                                                  "referencedDeclaration": 33,
                                                  "type": "struct Licenses.VitalRecord storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct Licenses.Profile storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 38,
                                                          "type": "mapping(address => struct Licenses.Profile storage ref)",
                                                          "value": "profiles"
                                                        },
                                                        "id": 349,
                                                        "name": "Identifier",
                                                        "src": "3366:8:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 287,
                                                          "type": "address",
                                                          "value": "forCitizen"
                                                        },
                                                        "id": 350,
                                                        "name": "Identifier",
                                                        "src": "3375:10:0"
                                                      }
                                                    ],
                                                    "id": 351,
                                                    "name": "IndexAccess",
                                                    "src": "3366:20:0"
                                                  }
                                                ],
                                                "id": 352,
                                                "name": "MemberAccess",
                                                "src": "3366:40:0"
                                              }
                                            ],
                                            "id": 353,
                                            "name": "MemberAccess",
                                            "src": "3366:48:0"
                                          }
                                        ],
                                        "id": 354,
                                        "name": "UnaryOperation",
                                        "src": "3365:49:0"
                                      }
                                    ],
                                    "id": 355,
                                    "name": "FunctionCall",
                                    "src": "3357:58:0"
                                  }
                                ],
                                "id": 356,
                                "name": "ExpressionStatement",
                                "src": "3357:58:0"
                              },
                              {
                                "attributes": {
                                  "assignments": [
                                    358
                                  ],
                                  "initialValue": null
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "constant": false,
                                      "mutability": "mutable",
                                      "name": "vr",
                                      "overrides": null,
                                      "scope": 386,
                                      "stateVariable": false,
                                      "storageLocation": "memory",
                                      "type": "struct Licenses.VitalRecord",
                                      "value": null,
                                      "visibility": "internal"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "contractScope": null,
                                          "name": "VitalRecord",
                                          "referencedDeclaration": 19,
                                          "type": "struct Licenses.VitalRecord"
                                        },
                                        "id": 357,
                                        "name": "UserDefinedTypeName",
                                        "src": "3429:11:0"
                                      }
                                    ],
                                    "id": 358,
                                    "name": "VariableDeclaration",
                                    "src": "3429:21:0"
                                  }
                                ],
                                "id": 359,
                                "name": "VariableDeclarationStatement",
                                "src": "3429:21:0"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "=",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "member_name": "isValue",
                                          "referencedDeclaration": 16,
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 358,
                                              "type": "struct Licenses.VitalRecord memory",
                                              "value": "vr"
                                            },
                                            "id": 360,
                                            "name": "Identifier",
                                            "src": "3465:2:0"
                                          }
                                        ],
                                        "id": 362,
                                        "name": "MemberAccess",
                                        "src": "3465:10:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "74727565",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "bool",
                                          "type": "bool",
                                          "value": "true"
                                        },
                                        "id": 363,
                                        "name": "Literal",
                                        "src": "3478:4:0"
                                      }
                                    ],
                                    "id": 364,
                                    "name": "Assignment",
                                    "src": "3465:17:0"
                                  }
                                ],
                                "id": 365,
                                "name": "ExpressionStatement",
                                "src": "3465:17:0"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "=",
                                      "type": "enum Licenses.CertificateType"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "member_name": "certificateType",
                                          "referencedDeclaration": 14,
                                          "type": "enum Licenses.CertificateType"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 358,
                                              "type": "struct Licenses.VitalRecord memory",
                                              "value": "vr"
                                            },
                                            "id": 366,
                                            "name": "Identifier",
                                            "src": "3496:2:0"
                                          }
                                        ],
                                        "id": 368,
                                        "name": "MemberAccess",
                                        "src": "3496:18:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "member_name": "MARRIAGE",
                                          "referencedDeclaration": null,
                                          "type": "enum Licenses.CertificateType"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 12,
                                              "type": "type(enum Licenses.CertificateType)",
                                              "value": "CertificateType"
                                            },
                                            "id": 369,
                                            "name": "Identifier",
                                            "src": "3517:15:0"
                                          }
                                        ],
                                        "id": 370,
                                        "name": "MemberAccess",
                                        "src": "3517:24:0"
                                      }
                                    ],
                                    "id": 371,
                                    "name": "Assignment",
                                    "src": "3496:45:0"
                                  }
                                ],
                                "id": 372,
                                "name": "ExpressionStatement",
                                "src": "3496:45:0"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "=",
                                      "type": "uint128"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "member_name": "date",
                                          "referencedDeclaration": 18,
                                          "type": "uint128"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 358,
                                              "type": "struct Licenses.VitalRecord memory",
                                              "value": "vr"
                                            },
                                            "id": 373,
                                            "name": "Identifier",
                                            "src": "3555:2:0"
                                          }
                                        ],
                                        "id": 375,
                                        "name": "MemberAccess",
                                        "src": "3555:7:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 285,
                                          "type": "uint128",
                                          "value": "date"
                                        },
                                        "id": 376,
                                        "name": "Identifier",
                                        "src": "3565:4:0"
                                      }
                                    ],
                                    "id": 377,
                                    "name": "Assignment",
                                    "src": "3555:14:0"
                                  }
                                ],
                                "id": 378,
                                "name": "ExpressionStatement",
                                "src": "3555:14:0"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "=",
                                      "type": "struct Licenses.VitalRecord storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "member_name": "marriageCertificate",
                                          "referencedDeclaration": 33,
                                          "type": "struct Licenses.VitalRecord storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct Licenses.Profile storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 38,
                                                  "type": "mapping(address => struct Licenses.Profile storage ref)",
                                                  "value": "profiles"
                                                },
                                                "id": 379,
                                                "name": "Identifier",
                                                "src": "3583:8:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 287,
                                                  "type": "address",
                                                  "value": "forCitizen"
                                                },
                                                "id": 380,
                                                "name": "Identifier",
                                                "src": "3592:10:0"
                                              }
                                            ],
                                            "id": 381,
                                            "name": "IndexAccess",
                                            "src": "3583:20:0"
                                          }
                                        ],
                                        "id": 382,
                                        "name": "MemberAccess",
                                        "src": "3583:40:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 358,
                                          "type": "struct Licenses.VitalRecord memory",
                                          "value": "vr"
                                        },
                                        "id": 383,
                                        "name": "Identifier",
                                        "src": "3626:2:0"
                                      }
                                    ],
                                    "id": 384,
                                    "name": "Assignment",
                                    "src": "3583:45:0"
                                  }
                                ],
                                "id": 385,
                                "name": "ExpressionStatement",
                                "src": "3583:45:0"
                              }
                            ],
                            "id": 386,
                            "name": "Block",
                            "src": "3343:296:0"
                          }
                        ],
                        "id": 387,
                        "name": "IfStatement",
                        "src": "3282:357:0"
                      }
                    ],
                    "id": 388,
                    "name": "IfStatement",
                    "src": "2923:716:0"
                  }
                ],
                "id": 389,
                "name": "Block",
                "src": "2866:779:0"
              }
            ],
            "id": 390,
            "name": "FunctionDefinition",
            "src": "2744:901:0"
          }
        ],
        "id": 391,
        "name": "ContractDefinition",
        "src": "100:3547:0"
      }
    ],
    "id": 392,
    "name": "SourceUnit",
    "src": "32:3615:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xa9D0Be05a465df2E116C6f0acb1b107B55BC97c1",
      "transactionHash": "0x6738b8565fbc101e68fa26d40e4a9ea6572101aea7c57fdfdc3b17d3091b3670"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-04-25T03:15:02.709Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}